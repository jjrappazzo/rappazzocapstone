[
  {
    "objectID": "basic-example.html",
    "href": "basic-example.html",
    "title": "United States Car Accident Project",
    "section": "",
    "text": "Linear Regression \n Lasso Regression \n Ridge Regression \n Random Forest"
  },
  {
    "objectID": "basic-example.html#overview-of-modeling-techniques---me",
    "href": "basic-example.html#overview-of-modeling-techniques---me",
    "title": "United States Car Accident Project",
    "section": "",
    "text": "Linear Regression \n Lasso Regression \n Ridge Regression \n Random Forest"
  },
  {
    "objectID": "basic-example.html#linear-regression",
    "href": "basic-example.html#linear-regression",
    "title": "United States Car Accident Project",
    "section": "4.1 Linear Regression",
    "text": "4.1 Linear Regression\n\n# Fit the linear regression model\nlin_reg &lt;- lm(label ~ ., data = accident_prepared)\n\n# Use the model to predict the response variable using the test data\ny_pred &lt;- predict(lin_reg, newdata = accident_prepared_test)\n\n# Calculate the residuals\nresiduals &lt;- y_pred - label_test\n\n# Calculate the squared errors\nsquared_errors &lt;- residuals^2\n\n# Calculate the mean squared error\nmse &lt;- mean(squared_errors)\n\n# Print the MSE\ncat(\"MSE:\", mse)\n## MSE: 0.1324914"
  },
  {
    "objectID": "basic-example.html#ridge-regression",
    "href": "basic-example.html#ridge-regression",
    "title": "United States Car Accident Project",
    "section": "4.2 Ridge Regression",
    "text": "4.2 Ridge Regression\n\n#ridge regression\n\nlibrary(glmnet)\n\n# Separate the predictor variables from the response variable\ny &lt;- label\nX &lt;- as.matrix(select(accident_prepared, -label))\n\n# Define the lambda sequence for ridge regression\nlambda_seq &lt;- 10^seq(10, -2, length = 100)\n\n# Perform cross-validated ridge regression\nridge_fit &lt;- cv.glmnet(X, y, alpha = 0, lambda = lambda_seq)\n\n# Plot the cross-validation results\nplot(ridge_fit)\n\n\n\n\nridge_coef &lt;- coef(ridge_fit)[-1]\n\ny_pred &lt;- predict(ridge_fit, newx = X)\n\nmse &lt;- mean((y - y_pred)^2)\n\n\n# Print the MSE\ncat(\"MSE:\", mse)\n## MSE: 0.1341102"
  },
  {
    "objectID": "basic-example.html#lasso-regression",
    "href": "basic-example.html#lasso-regression",
    "title": "United States Car Accident Project",
    "section": "4.3 Lasso Regression",
    "text": "4.3 Lasso Regression\n\nx &lt;- model.matrix(~ ., data = accident_prepared) \ny &lt;- label\n\n# Fit a Lasso regression with cross-validation\nlasso_model &lt;- cv.glmnet(x, y, alpha = 1) \n\nextra_columns &lt;- setdiff(colnames(accident_prepared_test), colnames(accident_prepared))\n\naccident_prepared_test &lt;- accident_prepared_test %&gt;%\n                          select(-one_of(extra_columns))\n\n\n# Predict the response variable using the test data\nx_test &lt;- model.matrix(~ ., data = accident_prepared_test) \ny_pred &lt;- predict(lasso_model, newx = x_test)\n\n# Calculate the MSE\nmse &lt;- mean((y_pred - label_test)^2)\n\n# Print the MSE\ncat(\"MSE:\", mse)\n## MSE: 0.134835\n\n\nplot(lasso_model)"
  },
  {
    "objectID": "basic-example.html#random-forest",
    "href": "basic-example.html#random-forest",
    "title": "United States Car Accident Project",
    "section": "4.4 Random Forest",
    "text": "4.4 Random Forest\n\nlibrary(randomForest)\n\n# Train the model\naccident_forest &lt;- randomForest(label ~ ., data = accident_prepared, ntree = 10, mtry = 5)\n\n# Make predictions on the test set\npred &lt;- predict(accident_forest, newdata = accident_prepared_test)\n\n# Generate confusion matrix\nconfusion_matrix &lt;- table(pred, label_test)\n\n# Calculate MSE\nmse &lt;- mean((label_test - pred)^2)\n\n\nprint(paste(\"Mean Squared Error:\", mse))\n\n[1] \"Mean Squared Error: 0.132744376926526\""
  },
  {
    "objectID": "basic-example.html#mean-squared-error-of-all-models",
    "href": "basic-example.html#mean-squared-error-of-all-models",
    "title": "United States Car Accident Project",
    "section": "5.1 Mean Squared Error of all Models",
    "text": "5.1 Mean Squared Error of all Models"
  },
  {
    "objectID": "basic-example.html#linear-regression-results",
    "href": "basic-example.html#linear-regression-results",
    "title": "United States Car Accident Project",
    "section": "5.2 Linear Regression Results",
    "text": "5.2 Linear Regression Results\n\n## \n## Linear Regression Results\n## ==========================================================================\n##                                                 Severity of Car Accident  \n##                                                ---------------------------\n##                                                           label           \n## --------------------------------------------------------------------------\n## Temperature.F.                                    0.002 (-0.001, 0.005)   \n## Humidity...                                      0.007*** (0.004, 0.010)  \n## Visibility.mi.                                   -0.002 (-0.005, 0.002)   \n## Wind_Speed.mph.                                  -0.001 (-0.004, 0.002)   \n## Precipitation.in.                                -0.0002 (-0.003, 0.002)  \n## Crossing                                       -0.036*** (-0.043, -0.029) \n## Junction                                          0.019 (-0.014, 0.052)   \n## Traffic_Signal                                 -0.014*** (-0.021, -0.007) \n## State_AR                                         0.150*** (0.101, 0.199)  \n## State_AZ                                       -0.199*** (-0.233, -0.165) \n## State_CA                                       -0.104*** (-0.135, -0.074) \n## State_CO                                         0.554*** (0.506, 0.602)  \n## State_CT                                         0.503*** (0.451, 0.555)  \n## State_DC                                         0.149*** (0.103, 0.196)  \n## State_DE                                         0.375*** (0.308, 0.441)  \n## State_FL                                       -0.097*** (-0.127, -0.066) \n## State_GA                                         0.601*** (0.552, 0.650)  \n## State_IA                                         0.400*** (0.336, 0.463)  \n## State_ID                                          0.006 (-0.042, 0.053)   \n## State_IL                                         0.290*** (0.254, 0.327)  \n## State_IN                                         0.594*** (0.540, 0.648)  \n## State_KS                                          0.112 (-0.007, 0.231)   \n## State_KY                                          0.024 (-0.044, 0.092)   \n## State_LA                                       -0.119*** (-0.152, -0.086) \n## State_MA                                         0.538*** (0.447, 0.630)  \n## State_MD                                         0.193*** (0.157, 0.229)  \n## State_ME                                        -0.162* (-0.316, -0.009)  \n## State_MI                                         0.084*** (0.048, 0.120)  \n## State_MN                                       -0.105*** (-0.138, -0.072) \n## State_MO                                          0.006 (-0.039, 0.050)   \n## State_MS                                         0.135*** (0.057, 0.214)  \n## State_MT                                       -0.094*** (-0.133, -0.056) \n## State_NC                                         -0.018 (-0.049, 0.014)   \n## State_ND                                        -0.119* (-0.220, -0.019)  \n## State_NE                                         0.311*** (0.215, 0.407)  \n## State_NH                                         0.617*** (0.477, 0.758)  \n## State_NJ                                         0.271*** (0.233, 0.310)  \n## State_NM                                         -0.101 (-0.245, 0.044)   \n## State_NV                                         0.196*** (0.112, 0.280)  \n## State_NY                                         0.157*** (0.124, 0.190)  \n## State_OH                                          0.030 (-0.010, 0.069)   \n## State_OK                                         -0.008 (-0.050, 0.035)   \n## State_OR                                       -0.053*** (-0.084, -0.021) \n## State_PA                                          0.012 (-0.020, 0.043)   \n## State_RI                                          0.109 (-0.092, 0.311)   \n## State_SC                                       -0.098*** (-0.130, -0.067) \n## State_SD                                          0.078 (-0.105, 0.261)   \n## State_TN                                       -0.087*** (-0.120, -0.053) \n## State_TX                                       -0.093*** (-0.125, -0.062) \n## State_UT                                       -0.057*** (-0.094, -0.021) \n## State_VA                                         0.071*** (0.038, 0.103)  \n## State_VT                                        -0.236** (-0.428, -0.043) \n## State_WA                                         0.242*** (0.202, 0.281)  \n## State_WI                                         1.430*** (1.339, 1.520)  \n## State_WV                                          0.066 (-0.005, 0.136)   \n## Weather_Condition_Blowing.Dust...Windy            0.023 (-0.457, 0.503)   \n## Weather_Condition_Blowing.Snow...Windy           -0.175 (-0.815, 0.466)   \n## Weather_Condition_Clear                           0.273 (-0.062, 0.607)   \n## Weather_Condition_Cloudy                          0.015 (-0.212, 0.241)   \n## Weather_Condition_Cloudy...Windy                  0.028 (-0.201, 0.258)   \n## Weather_Condition_Drizzle                         0.136 (-0.110, 0.381)   \n## Weather_Condition_Drizzle.and.Fog                -0.068 (-0.444, 0.307)   \n## Weather_Condition_Fair                            0.020 (-0.207, 0.246)   \n## Weather_Condition_Fair...Windy                    0.052 (-0.176, 0.280)   \n## Weather_Condition_Fog                             0.007 (-0.220, 0.234)   \n## Weather_Condition_Fog...Windy                    -0.007 (-0.340, 0.327)   \n## Weather_Condition_Freezing.Drizzle               -0.183 (-0.823, 0.457)   \n## Weather_Condition_Haze                            0.010 (-0.217, 0.238)   \n## Weather_Condition_Haze...Windy                    0.057 (-0.202, 0.315)   \n## Weather_Condition_Heavy.Drizzle                  -0.057 (-0.470, 0.356)   \n## Weather_Condition_Heavy.Rain                      0.008 (-0.223, 0.238)   \n## Weather_Condition_Heavy.Rain...Windy              0.196 (-0.099, 0.492)   \n## Weather_Condition_Heavy.Sleet                     0.030 (-0.610, 0.670)   \n## Weather_Condition_Heavy.Snow                      0.038 (-0.213, 0.290)   \n## Weather_Condition_Heavy.Snow...Windy              0.017 (-0.463, 0.498)   \n## Weather_Condition_Heavy.T.Storm                  -0.008 (-0.241, 0.226)   \n## Weather_Condition_Heavy.T.Storm...Windy          -0.165 (-0.467, 0.138)   \n## Weather_Condition_Light.Drizzle                   0.040 (-0.192, 0.271)   \n## Weather_Condition_Light.Drizzle...Windy          0.659*** (0.308, 1.010)  \n## Weather_Condition_Light.Freezing.Drizzle         -0.054 (-0.404, 0.297)   \n## Weather_Condition_Light.Freezing.Rain             0.252 (-0.050, 0.554)   \n## Weather_Condition_Light.Freezing.Rain...Windy    0.871*** (0.496, 1.247)  \n## Weather_Condition_Light.Ice.Pellets              0.814*** (0.334, 1.294)  \n## Weather_Condition_Light.Rain                      0.029 (-0.198, 0.255)   \n## Weather_Condition_Light.Rain...Windy              0.057 (-0.177, 0.292)   \n## Weather_Condition_Light.Rain.Shower               0.143 (-0.233, 0.519)   \n## Weather_Condition_Light.Rain.with.Thunder        -0.007 (-0.238, 0.223)   \n## Weather_Condition_Light.Snow                      0.067 (-0.161, 0.294)   \n## Weather_Condition_Light.Snow...Windy              0.048 (-0.194, 0.291)   \n## Weather_Condition_Light.Snow.and.Sleet           -0.011 (-0.651, 0.629)   \n## Weather_Condition_Light.Snow.Shower              -0.023 (-0.663, 0.618)   \n## Weather_Condition_Light.Thunderstorms.and.Rain    0.613 (-0.028, 1.253)   \n## Weather_Condition_Mist                            0.123 (-0.162, 0.408)   \n## Weather_Condition_Mostly.Cloudy                   0.006 (-0.221, 0.232)   \n## Weather_Condition_Mostly.Cloudy...Windy           0.022 (-0.208, 0.252)   \n## Weather_Condition_N.A.Precipitation              -0.091 (-0.345, 0.163)   \n## Weather_Condition_Overcast                       0.498*** (0.263, 0.734)  \n## Weather_Condition_Partly.Cloudy                   0.016 (-0.211, 0.242)   \n## Weather_Condition_Partly.Cloudy...Windy          -0.004 (-0.238, 0.230)   \n## Weather_Condition_Patches.of.Fog                 -0.003 (-0.255, 0.250)   \n## Weather_Condition_Rain                            0.014 (-0.214, 0.242)   \n## Weather_Condition_Rain...Windy                    0.036 (-0.231, 0.303)   \n## Weather_Condition_Scattered.Clouds               -0.157 (-0.570, 0.256)   \n## Weather_Condition_Shallow.Fog                    -0.055 (-0.304, 0.194)   \n## Weather_Condition_Showers.in.the.Vicinity        -0.080 (-0.493, 0.334)   \n## Weather_Condition_Sleet                          -0.215 (-0.695, 0.265)   \n## Weather_Condition_Smoke                           0.131 (-0.099, 0.360)   \n## Weather_Condition_Smoke...Windy                  1.000*** (0.520, 1.480)  \n## Weather_Condition_Snow                            0.081 (-0.154, 0.316)   \n## Weather_Condition_Snow...Windy                   -0.002 (-0.322, 0.318)   \n## Weather_Condition_Snow.and.Sleet                 -0.119 (-0.759, 0.521)   \n## Weather_Condition_T.Storm                         0.025 (-0.205, 0.255)   \n## Weather_Condition_T.Storm...Windy                -0.016 (-0.429, 0.397)   \n## Weather_Condition_Thunder                         0.011 (-0.219, 0.241)   \n## Weather_Condition_Thunder...Windy                -0.025 (-0.315, 0.264)   \n## Weather_Condition_Thunder...Wintry.Mix           -0.253 (-0.894, 0.388)   \n## Weather_Condition_Thunder.and.Hail                0.004 (-0.636, 0.643)   \n## Weather_Condition_Thunder.in.the.Vicinity         0.033 (-0.195, 0.262)   \n## Weather_Condition_Widespread.Dust                 0.005 (-0.635, 0.644)   \n## Weather_Condition_Widespread.Dust...Windy         0.021 (-0.619, 0.661)   \n## Weather_Condition_Wintry.Mix                      0.040 (-0.194, 0.274)   \n## Weather_Condition_Wintry.Mix...Windy             -0.008 (-0.648, 0.631)   \n## Sunrise_Sunset_Night                             0.012*** (0.006, 0.017)  \n## Constant                                         2.096*** (1.867, 2.324)  \n## ==========================================================================\n## ==========================================================================\n## Note:                                          *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01\n\n\nlibrary(coefplot)\nlibrary(broom)\n\n\n# Extract coefficients and standard errors\ncoef_df &lt;- tidy(lin_reg, conf.int = TRUE)\n\n# Filter out intercept\ncoef_df &lt;- coef_df[-1,]\n\nnum_coef_df &lt;- coef_df[coef_df$term %in% num_attribs,]\ncat_coef_df &lt;- coef_df[grep(\".*\\\\_.*\", coef_df$term), ]\n\n# Create plots\nplot_num &lt;- ggplot(num_coef_df, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Numeric Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_num\n\n\n\n\n\ncat_coef_df1 &lt;- cat_coef_df[1:25,]\ncat_coef_df2 &lt;- cat_coef_df[25:50,]\ncat_coef_df3 &lt;- cat_coef_df[50:75,]\ncat_coef_df4 &lt;- cat_coef_df[75:100,]\ncat_coef_df5 &lt;- cat_coef_df[100:125,]\n\n\n\n# Create  separate plots\nplot_cat1 &lt;- ggplot(cat_coef_df1, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_cat1\n\n\n\n\nplot_cat2 &lt;- ggplot(cat_coef_df2, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_cat2\n\n\n\n\nplot_cat3 &lt;- ggplot(cat_coef_df3, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\nplot_cat3\n\n\n\n\nplot_cat4 &lt;- ggplot(cat_coef_df4, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_cat4\n\n\n\n\nplot_cat5 &lt;- ggplot(cat_coef_df5, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_cat5"
  },
  {
    "objectID": "basic-example.html#decision-tree-results",
    "href": "basic-example.html#decision-tree-results",
    "title": "United States Car Accident Project",
    "section": "5.3 Decision Tree Results",
    "text": "5.3 Decision Tree Results\n\nvarImpPlot(accident_forest, main = \"Variable Importance Plot\")"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html",
    "href": "DANL310_midterm-spring-2023-a.html",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(stargazer)\n\n\nI use theme_set(theme_ipsum() + theme(strip.background =element_rect(fill=\"lightgray\"))) in the setup R code chunk with the include = FALSE option"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#loading-r-packages",
    "href": "DANL310_midterm-spring-2023-a.html#loading-r-packages",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(stargazer)\n\n\nI use theme_set(theme_ipsum() + theme(strip.background =element_rect(fill=\"lightgray\"))) in the setup R code chunk with the include = FALSE option"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q1a",
    "href": "DANL310_midterm-spring-2023-a.html#q1a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q1a",
    "text": "Q1a\n\nReplicate the following ggplot.\n\nUse the color #0072B2 for dots.\n\n\n\n# Set the data and filter to include only observations from 2007 and exclude Oceania\nggplot(data = filter(gapminder, year == 2007,\n                     continent != 'Oceania'),\n\n       # Set the aesthetics (x-axis and y-axis) to life expectancy and reorder countries by life expectancy\n       aes(x = lifeExp,\n           y = fct_reorder(country, lifeExp))) +\n\n  # Add a layer of points to the plot, setting the color to blue and size to 1.75\n  geom_point(color = \"#0072B2\", size = 1.75) +\n\n  # Add a layer of text labels to the plot, setting the label to life expectancy, hjust to -.25, and size to 2\n  geom_text(aes(label = lifeExp), hjust = -.25,\n            size = 2) +\n\n  # Facet the plot by continent, with y-scales free\n  facet_wrap(.~continent, scales = \"free_y\") +\n\n  # Set the x-axis label to NULL (no name) and limit the x-axis to 35-90\n  scale_x_continuous(\n    name = NULL,\n    lim = c(35, 90)\n  ) +\n\n  # Set the y-axis label to NULL (no name)\n  scale_y_discrete(name = NULL) +\n\n  # Add a title to the plot\n  labs(title = 'Life expectancy in 2007') +\n\n  # Set the theme to minimal\n  theme_minimal() +\n\n  # Customize theme elements: set the y-axis text size, the plot title size and position, and the facet strip text size and font face\n  theme(\n    axis.text.y = element_text(size = rel(.75)),\n    plot.title = element_text(size = rel(1.5),\n                              hjust = 0.5,\n                              face = 'bold'),\n    strip.text = element_text(size = rel(1.25),\n                              face = 'bold')\n  )"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q1b",
    "href": "DANL310_midterm-spring-2023-a.html#q1b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q1b",
    "text": "Q1b\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q2a",
    "href": "DANL310_midterm-spring-2023-a.html#q2a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q2a",
    "text": "Q2a\n\nReplicate the following ggplot.\n\nThe following describes the type values:\n\nn_ot_us: Number of US tweets\nn_ot_wrld: Number of worldwide tweets\nn_rt_lk_us: Number of US retweets & likes\nn_rt_lk_wrld: Number of worldwide retweets & likes\n\nUse the colors, maroon and #428bca properly.\n\n\n\n# The following line filters the rows of the n_tweets_long data frame that have a value of \"n_ot_us\" or \"n_ot_wrld\" in the \"type\" column. \n# It then creates a new column called \"type\" that replaces \"n_ot_us\" with \"US\" and \"n_ot_wrld\" with \"Worldwide\".\nn_tweets_long1 &lt;- n_tweets_long %&gt;% \n  filter(type %in% c(\"n_ot_us\", \"n_ot_wrld\") ) %&gt;% \n  mutate(type = ifelse(type == \"n_ot_us\", \"US\", \"Worldwide\"))\n\n\n# The following line filters the rows of the n_tweets_long data frame that have a value of \"n_rt_lk_us\" or \"n_rt_lk_wrld\" in the \"type\" column. \n# It then creates a new column called \"type\" that replaces \"n_rt_lk_us\" with \"US\" and \"n_rt_lk_wrld\" with \"Worldwide\".\nn_tweets_long2 &lt;- n_tweets_long %&gt;% \n  filter(type %in% c(\"n_rt_lk_us\", \"n_rt_lk_wrld\") ) %&gt;% \n  mutate(type = ifelse(type == \"n_rt_lk_us\", \"US\", \"Worldwide\"))\n  \n\n\np2 &lt;- ggplot(mapping = aes(x = year, y = n)) +  # Create a ggplot object with the mapping of the x-axis to the \"year\" variable and y-axis to the \"n\" variable\n  geom_col(n_tweets_long1,  # Add a column chart layer with the \"n_tweets_long1\" data\n           mapping = aes(fill = type),  # Map the \"type\" variable to the fill aesthetic of the chart\n           position = 'dodge', alpha = .67) +  # Set the position of the columns to \"dodge\" and the transparency to 0.67\n  geom_line(n_tweets_long2,  # Add a line chart layer with the \"n_tweets_long2\" data\n            mapping = aes(color = type),  # Map the \"type\" variable to the color aesthetic of the chart\n            size = 1.5) +  # Set the line size to 1.5\n  geom_point(data = n_tweets_long2,  # Add a point chart layer with the \"n_tweets_long2\" data\n             size = 2,  # Set the point size to 2\n             color = 'black')  +  # Set the point color to black\n  scale_x_continuous(breaks = seq(2012, 2017, 1)) +  # Set the x-axis breaks to the sequence from 2012 to 2017 with an interval of 1\n  scale_y_continuous(label = scales::comma) +  # Format the y-axis labels using the comma function from the scales package\n  scale_color_manual(values = c('maroon', '#428bca')) +  # Manually set the color values for the color aesthetic\n  scale_fill_manual(values = c('maroon', '#428bca')) +   # Manually set the color values for the fill aesthetic\n  guides(fill = guide_legend(reverse = TRUE,  # Customize the fill legend guide by reversing the order of the legend, positioning the labels at the bottom, and setting the number of rows to 2 and the key width to 2\n                             # title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 2,\n                             nrow = 2,\n                             order = 1),\n         color = guide_legend(reverse = TRUE,  # Customize the color legend guide by reversing the order of the legend, positioning the labels at the bottom, and setting the number of rows to 2 and the key width to 2\n                             # title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 2,\n                             nrow = 2,\n                             order = 2)) +\n  labs(x = \"Year\",  # Add x-axis label \"Year\"\n       y = \"Number of Tweets, Retweets & Likes\\n (in thousand)\",  # Add y-axis label \"Number of Tweets, Retweets & Likes (in thousand)\"\n       fill = \"Tweets\",  # Add fill legend label \"Tweets\"\n       color = \"Retweets and likes\",  # Add color legend label \"Retweets and likes\"\n       caption = 'Source: Choe, \"Social Media Campaigns, Lobbying, and Climate Change Legislation:\\n Evidence from #climatechange/#globalwarming and Energy Lobbies\" (2023)') +  # Add caption with source information\n  theme_ipsum() +  # Use the 'theme_ipsum' theme from the 'ggthemes' package\n  theme(\n  axis.title.y = element_text(\n    size = rel(1.5),\n    margin = margin(t = 0, r = 20, b = 0, l = 0) # set the margin for the y axis title\n  ),\n  axis.title.x = element_text(\n    size = rel(1.5),\n    margin = margin(t = 10, r = 0, b = 0, l = 0) # set the margin for the x axis title\n  ),\n  axis.text.x = element_text(\n    size = rel(1.25) # set the font size for the x axis tick labels\n  ),\n  axis.text.y = element_text(\n    size = rel(1.25) # set the font size for the y axis tick labels\n  ),\n  legend.position = 'top', # set the position of the legend\n  legend.title = element_text(\n    size = rel(1),\n    face = 'bold',\n    hjust = .5 # set the font size, face and horizontal justification for the legend title\n  ),\n  legend.text = element_text(\n    size = rel(1) # set the font size for the legend text\n  ),\n  legend.spacing.x = unit(1.25, \"cm\"), # set the horizontal spacing between legend items\n  plot.caption = element_text(\n    size = rel(1.25),\n    hjust = .5 # set the font size and horizontal justification for the plot caption\n  )\n)\n\n\np2"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q2b.",
    "href": "DANL310_midterm-spring-2023-a.html#q2b.",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q2b.",
    "text": "Q2b.\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q3a",
    "href": "DANL310_midterm-spring-2023-a.html#q3a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q3a",
    "text": "Q3a\n\nReplicate the following ggplot.\n\nYou should calculate the proportion of Pit Bull (or Mix) for each zip code.\nYou should join data.frames properly.\nChoose the color palette from the viridis scales https://ggplot2.tidyverse.org/reference/scale_viridis.html.\nUse coord_map(projection = \"albers\", lat0 = 39, lat1 = 45).\n\n\n\n# Joining two data frames using a common variable\nnyc_zips_df &lt;- nyc_zips_df %&gt;% \n  left_join(nyc_zips_coord)\n\n# Creating a data frame of the top 5 dog breeds by count\nnyc_dogs &lt;- nyc_dog_license %&gt;%\n  group_by(breed_rc) %&gt;% \n  summarise(N = n()) %&gt;% \n  filter(dense_rank(-N)&lt;=5)\n\n# Creating a data frame of dog breed frequency and percentage by zip code for the top 5 breeds\nnyc_fb &lt;- nyc_dog_license %&gt;%\n  group_by(zip_code, breed_rc) %&gt;%\n  summarize(n = n()) %&gt;%\n  mutate(freq = n / sum(n),\n         pct = round(freq*100, 2)) %&gt;%\n  filter(breed_rc %in% nyc_dogs$breed_rc )\n\n\n# theme_nymap &lt;- function(base_size=9, base_family=\"\") {\n#   require(grid)\n#   theme_bw(base_size=base_size, base_family=base_family) %+replace%\n#     theme(axis.line=element_blank(),\n#           axis.text=element_blank(),\n#           axis.ticks=element_blank(),\n#           axis.title=element_blank(),\n#           panel.background=element_blank(),\n#           panel.border=element_blank(),\n#           panel.grid=element_blank(),\n#           panel.spacing=unit(0, \"lines\"),\n#           plot.background=element_blank(),\n#     )\n# }\n\n\n# Create a map of New York City zip codes colored by the share of Pit Bull dogs \n# and their mixes out of all licensed dogs, based on licensing data\nfb_map &lt;- nyc_zips_df %&gt;% \n  left_join(nyc_fb)\n\n# Filter for Pit Bull breeds and plot the map\nfilter(fb_map, breed_rc %in% c('Pit Bull (or Mix)')) %&gt;% \n  ggplot(mapping = aes(x = X, y = Y, \n                       fill = pct,\n                       group = zip_code)) +\n  geom_polygon(color = \"gray80\", \n               size = 0.1) +    # draw the zip code polygons\n  scale_fill_viridis_c(option = \"inferno\",\n                       breaks = seq(0,24,2)) +  # set the color scale for Pit Bull share\n  labs(fill = \"Pit Bull's Share of All Licensed Dogs (%)\",\n       title = \"New York City's Pit Bull\",\n       subtitle = \"By Zip Code. Based on Licensing Data\") +  # set the map title and legend title\n  theme_map() +  # set the map theme\n  theme(legend.justification = c(.5,.5),\n        legend.position = 'top',\n        legend.direction = \"horizontal\",\n        legend.text = element_text(size= rel(1.25)),\n        legend.title = element_text(size= rel(1.25),\n                                face = 'bold',\n                                hjust = .5),\n        plot.title = element_text(hjust = .5,\n                                  vjust = .5,\n                                  face = 'bold',\n                                  size = rel(2.25)),\n        plot.subtitle = element_text(hjust = .5,\n                                     vjust = .5,\n                                     size = rel(1.25))) +  # customize the theme of the plot\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +  # set the map projection\n  guides(fill = guide_legend(title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 1, nrow = 1))  # set the legend position"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q3b",
    "href": "DANL310_midterm-spring-2023-a.html#q3b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q3b",
    "text": "Q3b\n\nWhich zip_code does have the highest proportion of Pit Bull (or Mix)?\n\n\nq3b &lt;- fb_map %&gt;% \n  select(zip_code, breed_rc, pct) %&gt;% \n  filter(breed_rc == 'Pit Bull (or Mix)') %&gt;% \n  arrange(-pct) %&gt;% \n  distinct()"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q4a",
    "href": "DANL310_midterm-spring-2023-a.html#q4a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following ggplot.\n\n\n# Create a new variable year extracted from the Date column\nstock &lt;- stock %&gt;% \n  mutate(year = year(Date))\n\np &lt;- ggplot(data = filter(stock, year &gt;= 2019, year &lt;= 2022 ) , \n            aes(x = log(Volume), y = log(Close), color = company))\n\np + \n  geom_point(alpha = .05) +\n  geom_smooth(method = lm, color = 'black') +\n  facet_grid( company ~ year, scales = 'free' ) +\n  labs(x = 'Volume (in log)',\n       y = 'Close (in log)') +\n  guides(color = \"none\")"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q4b",
    "href": "DANL310_midterm-spring-2023-a.html#q4b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q4b",
    "text": "Q4b\n\nIn 2020, which company’s stock trading Volume does seem to be the most insensitive to a change in Close price?\n\n\n# Create a new variable year extracted from the Date column\nstock &lt;- stock %&gt;% \n  mutate(year = year(Date))\n\np &lt;- ggplot(data = filter(stock, year &gt;= 2019, year &lt;= 2022 ) , \n            aes(x = log(Volume), y = log(Close), color = company))\n\np + \n  geom_point(alpha = .05) +\n  geom_smooth(method = lm, color = 'black') +\n  facet_grid( company ~ year ) +\n  labs(x = 'Volume (in log)',\n       y = 'Close (in log)') +\n  guides(color = \"none\")\n\n\n\n\n\nIn 2020, TSLA’s trading Volume seems to be the most insensitive to a change in Close price.\nThe reason is that for a one unit increase in log(Price), the least amount of log(Volume) changes for TSLA.\n\n\nreg &lt;- lm(log(Volume) ~ log(Close) * company,\n          data = filter(stock, year == 2020))\nreg_sum &lt;- tidy(reg, conf.int = T) %&gt;% \n  filter(str_detect(term, \"log\"), term != \"log(Close)\")\n\nggplot(reg_sum,\n       aes(x = estimate, y = term,\n           xmin = conf.low, \n           xmax = conf.high)) +\n  geom_point() +\n  geom_pointrange() +\n  geom_vline(xintercept = 0, color = 'red', lty = 2)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jason Rappazzo",
    "section": "",
    "text": "I am a student at State University of New York at Geneseo.\nI am interested in …\nI enjoy …"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jason Rappazzo",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo, 2023 - B.A.in Economics - Minor in Data Analytics"
  },
  {
    "objectID": "table.html",
    "href": "table.html",
    "title": "Untitled",
    "section": "",
    "text": "kable(\n  iris,\n  col.names = c('We', 'Need', 'Five', 'Names', 'Here')\n) \n\n\n\n\nWe\nNeed\nFive\nNames\nHere\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n4.6\n3.4\n1.4\n0.3\nsetosa\n\n\n5.0\n3.4\n1.5\n0.2\nsetosa\n\n\n4.4\n2.9\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.1\nsetosa\n\n\n5.4\n3.7\n1.5\n0.2\nsetosa\n\n\n4.8\n3.4\n1.6\n0.2\nsetosa\n\n\n4.8\n3.0\n1.4\n0.1\nsetosa\n\n\n4.3\n3.0\n1.1\n0.1\nsetosa\n\n\n5.8\n4.0\n1.2\n0.2\nsetosa\n\n\n5.7\n4.4\n1.5\n0.4\nsetosa\n\n\n5.4\n3.9\n1.3\n0.4\nsetosa\n\n\n5.1\n3.5\n1.4\n0.3\nsetosa\n\n\n5.7\n3.8\n1.7\n0.3\nsetosa\n\n\n5.1\n3.8\n1.5\n0.3\nsetosa\n\n\n5.4\n3.4\n1.7\n0.2\nsetosa\n\n\n5.1\n3.7\n1.5\n0.4\nsetosa\n\n\n4.6\n3.6\n1.0\n0.2\nsetosa\n\n\n5.1\n3.3\n1.7\n0.5\nsetosa\n\n\n4.8\n3.4\n1.9\n0.2\nsetosa\n\n\n5.0\n3.0\n1.6\n0.2\nsetosa\n\n\n5.0\n3.4\n1.6\n0.4\nsetosa\n\n\n5.2\n3.5\n1.5\n0.2\nsetosa\n\n\n5.2\n3.4\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.6\n0.2\nsetosa\n\n\n4.8\n3.1\n1.6\n0.2\nsetosa\n\n\n5.4\n3.4\n1.5\n0.4\nsetosa\n\n\n5.2\n4.1\n1.5\n0.1\nsetosa\n\n\n5.5\n4.2\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.2\n1.2\n0.2\nsetosa\n\n\n5.5\n3.5\n1.3\n0.2\nsetosa\n\n\n4.9\n3.6\n1.4\n0.1\nsetosa\n\n\n4.4\n3.0\n1.3\n0.2\nsetosa\n\n\n5.1\n3.4\n1.5\n0.2\nsetosa\n\n\n5.0\n3.5\n1.3\n0.3\nsetosa\n\n\n4.5\n2.3\n1.3\n0.3\nsetosa\n\n\n4.4\n3.2\n1.3\n0.2\nsetosa\n\n\n5.0\n3.5\n1.6\n0.6\nsetosa\n\n\n5.1\n3.8\n1.9\n0.4\nsetosa\n\n\n4.8\n3.0\n1.4\n0.3\nsetosa\n\n\n5.1\n3.8\n1.6\n0.2\nsetosa\n\n\n4.6\n3.2\n1.4\n0.2\nsetosa\n\n\n5.3\n3.7\n1.5\n0.2\nsetosa\n\n\n5.0\n3.3\n1.4\n0.2\nsetosa\n\n\n7.0\n3.2\n4.7\n1.4\nversicolor\n\n\n6.4\n3.2\n4.5\n1.5\nversicolor\n\n\n6.9\n3.1\n4.9\n1.5\nversicolor\n\n\n5.5\n2.3\n4.0\n1.3\nversicolor\n\n\n6.5\n2.8\n4.6\n1.5\nversicolor\n\n\n5.7\n2.8\n4.5\n1.3\nversicolor\n\n\n6.3\n3.3\n4.7\n1.6\nversicolor\n\n\n4.9\n2.4\n3.3\n1.0\nversicolor\n\n\n6.6\n2.9\n4.6\n1.3\nversicolor\n\n\n5.2\n2.7\n3.9\n1.4\nversicolor\n\n\n5.0\n2.0\n3.5\n1.0\nversicolor\n\n\n5.9\n3.0\n4.2\n1.5\nversicolor\n\n\n6.0\n2.2\n4.0\n1.0\nversicolor\n\n\n6.1\n2.9\n4.7\n1.4\nversicolor\n\n\n5.6\n2.9\n3.6\n1.3\nversicolor\n\n\n6.7\n3.1\n4.4\n1.4\nversicolor\n\n\n5.6\n3.0\n4.5\n1.5\nversicolor\n\n\n5.8\n2.7\n4.1\n1.0\nversicolor\n\n\n6.2\n2.2\n4.5\n1.5\nversicolor\n\n\n5.6\n2.5\n3.9\n1.1\nversicolor\n\n\n5.9\n3.2\n4.8\n1.8\nversicolor\n\n\n6.1\n2.8\n4.0\n1.3\nversicolor\n\n\n6.3\n2.5\n4.9\n1.5\nversicolor\n\n\n6.1\n2.8\n4.7\n1.2\nversicolor\n\n\n6.4\n2.9\n4.3\n1.3\nversicolor\n\n\n6.6\n3.0\n4.4\n1.4\nversicolor\n\n\n6.8\n2.8\n4.8\n1.4\nversicolor\n\n\n6.7\n3.0\n5.0\n1.7\nversicolor\n\n\n6.0\n2.9\n4.5\n1.5\nversicolor\n\n\n5.7\n2.6\n3.5\n1.0\nversicolor\n\n\n5.5\n2.4\n3.8\n1.1\nversicolor\n\n\n5.5\n2.4\n3.7\n1.0\nversicolor\n\n\n5.8\n2.7\n3.9\n1.2\nversicolor\n\n\n6.0\n2.7\n5.1\n1.6\nversicolor\n\n\n5.4\n3.0\n4.5\n1.5\nversicolor\n\n\n6.0\n3.4\n4.5\n1.6\nversicolor\n\n\n6.7\n3.1\n4.7\n1.5\nversicolor\n\n\n6.3\n2.3\n4.4\n1.3\nversicolor\n\n\n5.6\n3.0\n4.1\n1.3\nversicolor\n\n\n5.5\n2.5\n4.0\n1.3\nversicolor\n\n\n5.5\n2.6\n4.4\n1.2\nversicolor\n\n\n6.1\n3.0\n4.6\n1.4\nversicolor\n\n\n5.8\n2.6\n4.0\n1.2\nversicolor\n\n\n5.0\n2.3\n3.3\n1.0\nversicolor\n\n\n5.6\n2.7\n4.2\n1.3\nversicolor\n\n\n5.7\n3.0\n4.2\n1.2\nversicolor\n\n\n5.7\n2.9\n4.2\n1.3\nversicolor\n\n\n6.2\n2.9\n4.3\n1.3\nversicolor\n\n\n5.1\n2.5\n3.0\n1.1\nversicolor\n\n\n5.7\n2.8\n4.1\n1.3\nversicolor\n\n\n6.3\n3.3\n6.0\n2.5\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n7.1\n3.0\n5.9\n2.1\nvirginica\n\n\n6.3\n2.9\n5.6\n1.8\nvirginica\n\n\n6.5\n3.0\n5.8\n2.2\nvirginica\n\n\n7.6\n3.0\n6.6\n2.1\nvirginica\n\n\n4.9\n2.5\n4.5\n1.7\nvirginica\n\n\n7.3\n2.9\n6.3\n1.8\nvirginica\n\n\n6.7\n2.5\n5.8\n1.8\nvirginica\n\n\n7.2\n3.6\n6.1\n2.5\nvirginica\n\n\n6.5\n3.2\n5.1\n2.0\nvirginica\n\n\n6.4\n2.7\n5.3\n1.9\nvirginica\n\n\n6.8\n3.0\n5.5\n2.1\nvirginica\n\n\n5.7\n2.5\n5.0\n2.0\nvirginica\n\n\n5.8\n2.8\n5.1\n2.4\nvirginica\n\n\n6.4\n3.2\n5.3\n2.3\nvirginica\n\n\n6.5\n3.0\n5.5\n1.8\nvirginica\n\n\n7.7\n3.8\n6.7\n2.2\nvirginica\n\n\n7.7\n2.6\n6.9\n2.3\nvirginica\n\n\n6.0\n2.2\n5.0\n1.5\nvirginica\n\n\n6.9\n3.2\n5.7\n2.3\nvirginica\n\n\n5.6\n2.8\n4.9\n2.0\nvirginica\n\n\n7.7\n2.8\n6.7\n2.0\nvirginica\n\n\n6.3\n2.7\n4.9\n1.8\nvirginica\n\n\n6.7\n3.3\n5.7\n2.1\nvirginica\n\n\n7.2\n3.2\n6.0\n1.8\nvirginica\n\n\n6.2\n2.8\n4.8\n1.8\nvirginica\n\n\n6.1\n3.0\n4.9\n1.8\nvirginica\n\n\n6.4\n2.8\n5.6\n2.1\nvirginica\n\n\n7.2\n3.0\n5.8\n1.6\nvirginica\n\n\n7.4\n2.8\n6.1\n1.9\nvirginica\n\n\n7.9\n3.8\n6.4\n2.0\nvirginica\n\n\n6.4\n2.8\n5.6\n2.2\nvirginica\n\n\n6.3\n2.8\n5.1\n1.5\nvirginica\n\n\n6.1\n2.6\n5.6\n1.4\nvirginica\n\n\n7.7\n3.0\n6.1\n2.3\nvirginica\n\n\n6.3\n3.4\n5.6\n2.4\nvirginica\n\n\n6.4\n3.1\n5.5\n1.8\nvirginica\n\n\n6.0\n3.0\n4.8\n1.8\nvirginica\n\n\n6.9\n3.1\n5.4\n2.1\nvirginica\n\n\n6.7\n3.1\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.1\n2.3\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n6.8\n3.2\n5.9\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.5\nvirginica\n\n\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n6.3\n2.5\n5.0\n1.9\nvirginica\n\n\n6.5\n3.0\n5.2\n2.0\nvirginica\n\n\n6.2\n3.4\n5.4\n2.3\nvirginica\n\n\n5.9\n3.0\n5.1\n1.8\nvirginica\n\n\n\n\n\n\n\n\nknitr::kable(iris, align = \"lccrr\")\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n4.6\n3.4\n1.4\n0.3\nsetosa\n\n\n5.0\n3.4\n1.5\n0.2\nsetosa\n\n\n4.4\n2.9\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.1\nsetosa\n\n\n5.4\n3.7\n1.5\n0.2\nsetosa\n\n\n4.8\n3.4\n1.6\n0.2\nsetosa\n\n\n4.8\n3.0\n1.4\n0.1\nsetosa\n\n\n4.3\n3.0\n1.1\n0.1\nsetosa\n\n\n5.8\n4.0\n1.2\n0.2\nsetosa\n\n\n5.7\n4.4\n1.5\n0.4\nsetosa\n\n\n5.4\n3.9\n1.3\n0.4\nsetosa\n\n\n5.1\n3.5\n1.4\n0.3\nsetosa\n\n\n5.7\n3.8\n1.7\n0.3\nsetosa\n\n\n5.1\n3.8\n1.5\n0.3\nsetosa\n\n\n5.4\n3.4\n1.7\n0.2\nsetosa\n\n\n5.1\n3.7\n1.5\n0.4\nsetosa\n\n\n4.6\n3.6\n1.0\n0.2\nsetosa\n\n\n5.1\n3.3\n1.7\n0.5\nsetosa\n\n\n4.8\n3.4\n1.9\n0.2\nsetosa\n\n\n5.0\n3.0\n1.6\n0.2\nsetosa\n\n\n5.0\n3.4\n1.6\n0.4\nsetosa\n\n\n5.2\n3.5\n1.5\n0.2\nsetosa\n\n\n5.2\n3.4\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.6\n0.2\nsetosa\n\n\n4.8\n3.1\n1.6\n0.2\nsetosa\n\n\n5.4\n3.4\n1.5\n0.4\nsetosa\n\n\n5.2\n4.1\n1.5\n0.1\nsetosa\n\n\n5.5\n4.2\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.2\n1.2\n0.2\nsetosa\n\n\n5.5\n3.5\n1.3\n0.2\nsetosa\n\n\n4.9\n3.6\n1.4\n0.1\nsetosa\n\n\n4.4\n3.0\n1.3\n0.2\nsetosa\n\n\n5.1\n3.4\n1.5\n0.2\nsetosa\n\n\n5.0\n3.5\n1.3\n0.3\nsetosa\n\n\n4.5\n2.3\n1.3\n0.3\nsetosa\n\n\n4.4\n3.2\n1.3\n0.2\nsetosa\n\n\n5.0\n3.5\n1.6\n0.6\nsetosa\n\n\n5.1\n3.8\n1.9\n0.4\nsetosa\n\n\n4.8\n3.0\n1.4\n0.3\nsetosa\n\n\n5.1\n3.8\n1.6\n0.2\nsetosa\n\n\n4.6\n3.2\n1.4\n0.2\nsetosa\n\n\n5.3\n3.7\n1.5\n0.2\nsetosa\n\n\n5.0\n3.3\n1.4\n0.2\nsetosa\n\n\n7.0\n3.2\n4.7\n1.4\nversicolor\n\n\n6.4\n3.2\n4.5\n1.5\nversicolor\n\n\n6.9\n3.1\n4.9\n1.5\nversicolor\n\n\n5.5\n2.3\n4.0\n1.3\nversicolor\n\n\n6.5\n2.8\n4.6\n1.5\nversicolor\n\n\n5.7\n2.8\n4.5\n1.3\nversicolor\n\n\n6.3\n3.3\n4.7\n1.6\nversicolor\n\n\n4.9\n2.4\n3.3\n1.0\nversicolor\n\n\n6.6\n2.9\n4.6\n1.3\nversicolor\n\n\n5.2\n2.7\n3.9\n1.4\nversicolor\n\n\n5.0\n2.0\n3.5\n1.0\nversicolor\n\n\n5.9\n3.0\n4.2\n1.5\nversicolor\n\n\n6.0\n2.2\n4.0\n1.0\nversicolor\n\n\n6.1\n2.9\n4.7\n1.4\nversicolor\n\n\n5.6\n2.9\n3.6\n1.3\nversicolor\n\n\n6.7\n3.1\n4.4\n1.4\nversicolor\n\n\n5.6\n3.0\n4.5\n1.5\nversicolor\n\n\n5.8\n2.7\n4.1\n1.0\nversicolor\n\n\n6.2\n2.2\n4.5\n1.5\nversicolor\n\n\n5.6\n2.5\n3.9\n1.1\nversicolor\n\n\n5.9\n3.2\n4.8\n1.8\nversicolor\n\n\n6.1\n2.8\n4.0\n1.3\nversicolor\n\n\n6.3\n2.5\n4.9\n1.5\nversicolor\n\n\n6.1\n2.8\n4.7\n1.2\nversicolor\n\n\n6.4\n2.9\n4.3\n1.3\nversicolor\n\n\n6.6\n3.0\n4.4\n1.4\nversicolor\n\n\n6.8\n2.8\n4.8\n1.4\nversicolor\n\n\n6.7\n3.0\n5.0\n1.7\nversicolor\n\n\n6.0\n2.9\n4.5\n1.5\nversicolor\n\n\n5.7\n2.6\n3.5\n1.0\nversicolor\n\n\n5.5\n2.4\n3.8\n1.1\nversicolor\n\n\n5.5\n2.4\n3.7\n1.0\nversicolor\n\n\n5.8\n2.7\n3.9\n1.2\nversicolor\n\n\n6.0\n2.7\n5.1\n1.6\nversicolor\n\n\n5.4\n3.0\n4.5\n1.5\nversicolor\n\n\n6.0\n3.4\n4.5\n1.6\nversicolor\n\n\n6.7\n3.1\n4.7\n1.5\nversicolor\n\n\n6.3\n2.3\n4.4\n1.3\nversicolor\n\n\n5.6\n3.0\n4.1\n1.3\nversicolor\n\n\n5.5\n2.5\n4.0\n1.3\nversicolor\n\n\n5.5\n2.6\n4.4\n1.2\nversicolor\n\n\n6.1\n3.0\n4.6\n1.4\nversicolor\n\n\n5.8\n2.6\n4.0\n1.2\nversicolor\n\n\n5.0\n2.3\n3.3\n1.0\nversicolor\n\n\n5.6\n2.7\n4.2\n1.3\nversicolor\n\n\n5.7\n3.0\n4.2\n1.2\nversicolor\n\n\n5.7\n2.9\n4.2\n1.3\nversicolor\n\n\n6.2\n2.9\n4.3\n1.3\nversicolor\n\n\n5.1\n2.5\n3.0\n1.1\nversicolor\n\n\n5.7\n2.8\n4.1\n1.3\nversicolor\n\n\n6.3\n3.3\n6.0\n2.5\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n7.1\n3.0\n5.9\n2.1\nvirginica\n\n\n6.3\n2.9\n5.6\n1.8\nvirginica\n\n\n6.5\n3.0\n5.8\n2.2\nvirginica\n\n\n7.6\n3.0\n6.6\n2.1\nvirginica\n\n\n4.9\n2.5\n4.5\n1.7\nvirginica\n\n\n7.3\n2.9\n6.3\n1.8\nvirginica\n\n\n6.7\n2.5\n5.8\n1.8\nvirginica\n\n\n7.2\n3.6\n6.1\n2.5\nvirginica\n\n\n6.5\n3.2\n5.1\n2.0\nvirginica\n\n\n6.4\n2.7\n5.3\n1.9\nvirginica\n\n\n6.8\n3.0\n5.5\n2.1\nvirginica\n\n\n5.7\n2.5\n5.0\n2.0\nvirginica\n\n\n5.8\n2.8\n5.1\n2.4\nvirginica\n\n\n6.4\n3.2\n5.3\n2.3\nvirginica\n\n\n6.5\n3.0\n5.5\n1.8\nvirginica\n\n\n7.7\n3.8\n6.7\n2.2\nvirginica\n\n\n7.7\n2.6\n6.9\n2.3\nvirginica\n\n\n6.0\n2.2\n5.0\n1.5\nvirginica\n\n\n6.9\n3.2\n5.7\n2.3\nvirginica\n\n\n5.6\n2.8\n4.9\n2.0\nvirginica\n\n\n7.7\n2.8\n6.7\n2.0\nvirginica\n\n\n6.3\n2.7\n4.9\n1.8\nvirginica\n\n\n6.7\n3.3\n5.7\n2.1\nvirginica\n\n\n7.2\n3.2\n6.0\n1.8\nvirginica\n\n\n6.2\n2.8\n4.8\n1.8\nvirginica\n\n\n6.1\n3.0\n4.9\n1.8\nvirginica\n\n\n6.4\n2.8\n5.6\n2.1\nvirginica\n\n\n7.2\n3.0\n5.8\n1.6\nvirginica\n\n\n7.4\n2.8\n6.1\n1.9\nvirginica\n\n\n7.9\n3.8\n6.4\n2.0\nvirginica\n\n\n6.4\n2.8\n5.6\n2.2\nvirginica\n\n\n6.3\n2.8\n5.1\n1.5\nvirginica\n\n\n6.1\n2.6\n5.6\n1.4\nvirginica\n\n\n7.7\n3.0\n6.1\n2.3\nvirginica\n\n\n6.3\n3.4\n5.6\n2.4\nvirginica\n\n\n6.4\n3.1\n5.5\n1.8\nvirginica\n\n\n6.0\n3.0\n4.8\n1.8\nvirginica\n\n\n6.9\n3.1\n5.4\n2.1\nvirginica\n\n\n6.7\n3.1\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.1\n2.3\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n6.8\n3.2\n5.9\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.5\nvirginica\n\n\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n6.3\n2.5\n5.0\n1.9\nvirginica\n\n\n6.5\n3.0\n5.2\n2.0\nvirginica\n\n\n6.2\n3.4\n5.4\n2.3\nvirginica\n\n\n5.9\n3.0\n5.1\n1.8\nvirginica\n\n\n\n\n\n\n\n\nd &lt;- cbind(X1 = runif(3), X2 = 10^c(3, 5, 7), X3 = rnorm(3,\n  0, 1000))\n# at most 4 decimal places\nknitr::kable(d, digits = 4)\n\n\n\n\nX1\nX2\nX3\n\n\n\n\n0.4230\n1e+03\n-1593.6120\n\n\n0.2991\n1e+05\n-1099.5072\n\n\n0.4239\n1e+07\n-695.0955\n\n\n\n\n\n\n\n\nknitr::kable(d, digits = 3, \n             format.args = list(scientific = FALSE))\n\n\n\n\nX1\nX2\nX3\n\n\n\n\n0.423\n1000\n-1593.612\n\n\n0.299\n100000\n-1099.507\n\n\n0.424\n10000000\n-695.095"
  }
]