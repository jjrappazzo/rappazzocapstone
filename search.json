[
  {
    "objectID": "basic-example.html",
    "href": "basic-example.html",
    "title": "United States Car Accident Project",
    "section": "",
    "text": "Binary Response Model \n Linear Regression \n Lasso Regression \n Ridge Regression \n Ordinal Logit Regression \n Decision Tree \n Random Forest \n Artificial Neural Network"
  },
  {
    "objectID": "basic-example.html#overview-of-modeling-techniques---me",
    "href": "basic-example.html#overview-of-modeling-techniques---me",
    "title": "United States Car Accident Project",
    "section": "",
    "text": "Binary Response Model \n Linear Regression \n Lasso Regression \n Ridge Regression \n Ordinal Logit Regression \n Decision Tree \n Random Forest \n Artificial Neural Network"
  },
  {
    "objectID": "basic-example.html#linear-regression",
    "href": "basic-example.html#linear-regression",
    "title": "United States Car Accident Project",
    "section": "4.1 Linear Regression",
    "text": "4.1 Linear Regression\n\n# Fit the linear regression model\nlin_reg &lt;- lm(label ~ ., data = accident_prepared)\n\n# Use the model to predict the response variable using the test data\ny_pred &lt;- predict(lin_reg, newdata = accident_prepared_test)\n\n# Calculate the residuals\nresiduals &lt;- y_pred - label_test\n\n# Calculate the squared errors\nsquared_errors &lt;- residuals^2\n\n# Calculate the mean squared error\nmse &lt;- mean(squared_errors)\n\n# Print the MSE\ncat(\"MSE:\", mse)\n## MSE: 0.1324914"
  },
  {
    "objectID": "basic-example.html#ridge-regression",
    "href": "basic-example.html#ridge-regression",
    "title": "United States Car Accident Project",
    "section": "4.2 Ridge Regression",
    "text": "4.2 Ridge Regression\n\n#ridge regression\n\nlibrary(glmnet)\n\n# Separate the predictor variables from the response variable\ny &lt;- label\nX &lt;- as.matrix(select(accident_prepared, -label))\n\n# Define the lambda sequence for ridge regression\nlambda_seq &lt;- 10^seq(10, -2, length = 100)\n\n# Perform cross-validated ridge regression\nridge_fit &lt;- cv.glmnet(X, y, alpha = 0, lambda = lambda_seq)\n\n# Plot the cross-validation results\nplot(ridge_fit)\n\n\n\n\nridge_coef &lt;- coef(ridge_fit)[-1]\n\ny_pred &lt;- predict(ridge_fit, newx = X)\n\nmse &lt;- mean((y - y_pred)^2)\n\n\n# Print the MSE\ncat(\"MSE:\", mse)\n## MSE: 0.1341102"
  },
  {
    "objectID": "basic-example.html#lasso-regression",
    "href": "basic-example.html#lasso-regression",
    "title": "United States Car Accident Project",
    "section": "4.3 Lasso Regression",
    "text": "4.3 Lasso Regression\n\nx &lt;- model.matrix(~ ., data = accident_prepared) \ny &lt;- label\n\n# Fit a Lasso regression with cross-validation\nlasso_model &lt;- cv.glmnet(x, y, alpha = 1) \n\nextra_columns &lt;- setdiff(colnames(accident_prepared_test), colnames(accident_prepared))\n\naccident_prepared_test &lt;- accident_prepared_test %&gt;%\n                          select(-one_of(extra_columns))\n\n\n# Predict the response variable using the test data\nx_test &lt;- model.matrix(~ ., data = accident_prepared_test) \ny_pred &lt;- predict(lasso_model, newx = x_test)\n\n# Calculate the MSE\nmse &lt;- mean((y_pred - label_test)^2)\n\n# Print the MSE\ncat(\"MSE:\", mse)\n## MSE: 0.134835\n\n\nplot(lasso_model)"
  },
  {
    "objectID": "basic-example.html#linear-regression-results",
    "href": "basic-example.html#linear-regression-results",
    "title": "United States Car Accident Project",
    "section": "5.1 Linear Regression Results",
    "text": "5.1 Linear Regression Results\n\n\nsummary(lin_reg)\n## \n## Call:\n## lm(formula = label ~ ., data = accident_prepared)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -2.52797 -0.06866 -0.02075 -0.00465  2.15885 \n## \n## Coefficients:\n##                                                  Estimate Std. Error t value\n## (Intercept)                                     2.0958311  0.1388593  15.093\n## Temperature.F.                                  0.0016274  0.0018751   0.868\n## Humidity...                                     0.0068859  0.0018842   3.655\n## Visibility.mi.                                 -0.0015936  0.0019652  -0.811\n## Wind_Speed.mph.                                -0.0008635  0.0016127  -0.535\n## Precipitation.in.                              -0.0001594  0.0015382  -0.104\n## CrossingTRUE                                   -0.0362585  0.0043024  -8.428\n## JunctionTRUE                                    0.0189544  0.0203361   0.932\n## Traffic_SignalTRUE                             -0.0141038  0.0041651  -3.386\n## State_AR                                        0.1504189  0.0298089   5.046\n## State_AZ                                       -0.1990743  0.0206304  -9.650\n## State_CA                                       -0.1041589  0.0185139  -5.626\n## State_CO                                        0.5539580  0.0290738  19.054\n## State_CT                                        0.5027875  0.0315755  15.923\n## State_DC                                        0.1494364  0.0283580   5.270\n## State_DE                                        0.3747692  0.0404234   9.271\n## State_FL                                       -0.0966262  0.0185361  -5.213\n## State_GA                                        0.6010876  0.0300341  20.014\n## State_IA                                        0.3997343  0.0386140  10.352\n## State_ID                                        0.0055216  0.0290426   0.190\n## State_IL                                        0.2903336  0.0222829  13.029\n## State_IN                                        0.5940194  0.0326600  18.188\n## State_KS                                        0.1121830  0.0723924   1.550\n## State_KY                                        0.0240924  0.0414291   0.582\n## State_LA                                       -0.1186637  0.0199758  -5.940\n## State_MA                                        0.5383176  0.0558111   9.645\n## State_MD                                        0.1930208  0.0217256   8.884\n## State_ME                                       -0.1622222  0.0932900  -1.739\n## State_MI                                        0.0838205  0.0219068   3.826\n## State_MN                                       -0.1049052  0.0201320  -5.211\n## State_MO                                        0.0057190  0.0271965   0.210\n## State_MS                                        0.1352351  0.0477571   2.832\n## State_MT                                       -0.0942080  0.0233438  -4.036\n## State_NC                                       -0.0175734  0.0192985  -0.911\n## State_ND                                       -0.1191537  0.0611300  -1.949\n## State_NE                                        0.3107596  0.0585094   5.311\n## State_NH                                        0.6174619  0.0854836   7.223\n## State_NJ                                        0.2714963  0.0233061  11.649\n## State_NM                                       -0.1007116  0.0877186  -1.148\n## State_NV                                        0.1959995  0.0512287   3.826\n## State_NY                                        0.1571378  0.0201787   7.787\n## State_OH                                        0.0299424  0.0240281   1.246\n## State_OK                                       -0.0075929  0.0256918  -0.296\n## State_OR                                       -0.0526093  0.0193208  -2.723\n## State_PA                                        0.0116459  0.0192052   0.606\n## State_RI                                        0.1094582  0.1226954   0.892\n## State_SC                                       -0.0984665  0.0190376  -5.172\n## State_SD                                        0.0784433  0.1112357   0.705\n## State_TN                                       -0.0866081  0.0202542  -4.276\n## State_TX                                       -0.0933029  0.0191659  -4.868\n## State_UT                                       -0.0573579  0.0221747  -2.587\n## State_VA                                        0.0707872  0.0197404   3.586\n## State_VT                                       -0.2356675  0.1168900  -2.016\n## State_WA                                        0.2417323  0.0240870  10.036\n## State_WI                                        1.4296343  0.0548606  26.059\n## State_WV                                        0.0655956  0.0427008   1.536\n## Weather_Condition_Blowing.Dust...Windy          0.0227432  0.2917855   0.078\n## Weather_Condition_Blowing.Snow...Windy         -0.1746618  0.3891952  -0.449\n## Weather_Condition_Clear                         0.2725820  0.2031507   1.342\n## Weather_Condition_Cloudy                        0.0146426  0.1377077   0.106\n## Weather_Condition_Cloudy...Windy                0.0284363  0.1395128   0.204\n## Weather_Condition_Drizzle                       0.1355011  0.1495017   0.906\n## Weather_Condition_Drizzle.and.Fog              -0.0681430  0.2282171  -0.299\n## Weather_Condition_Fair                          0.0196473  0.1376459   0.143\n## Weather_Condition_Fair...Windy                  0.0515160  0.1386097   0.372\n## Weather_Condition_Fog                           0.0073467  0.1380526   0.053\n## Weather_Condition_Fog...Windy                  -0.0065058  0.2026255  -0.032\n## Weather_Condition_Freezing.Drizzle             -0.1830741  0.3890729  -0.471\n## Weather_Condition_Haze                          0.0104004  0.1381591   0.075\n## Weather_Condition_Haze...Windy                  0.0567806  0.1572274   0.361\n## Weather_Condition_Heavy.Drizzle                -0.0571070  0.2512489  -0.227\n## Weather_Condition_Heavy.Rain                    0.0077773  0.1401272   0.056\n## Weather_Condition_Heavy.Rain...Windy            0.1962829  0.1796991   1.092\n## Weather_Condition_Heavy.Sleet                   0.0302063  0.3890860   0.078\n## Weather_Condition_Heavy.Snow                    0.0381202  0.1529729   0.249\n## Weather_Condition_Heavy.Snow...Windy            0.0174797  0.2920136   0.060\n## Weather_Condition_Heavy.T.Storm                -0.0076763  0.1420776  -0.054\n## Weather_Condition_Heavy.T.Storm...Windy        -0.1646998  0.1838617  -0.896\n## Weather_Condition_Light.Drizzle                 0.0395235  0.1406483   0.281\n## Weather_Condition_Light.Drizzle...Windy         0.6588084  0.2134850   3.086\n## Weather_Condition_Light.Freezing.Drizzle       -0.0536470  0.2132135  -0.252\n## Weather_Condition_Light.Freezing.Rain           0.2522939  0.1835475   1.375\n## Weather_Condition_Light.Freezing.Rain...Windy   0.8712753  0.2282335   3.817\n## Weather_Condition_Light.Ice.Pellets             0.8135605  0.2918535   2.788\n## Weather_Condition_Light.Rain                    0.0286741  0.1378294   0.208\n## Weather_Condition_Light.Rain...Windy            0.0573729  0.1425537   0.402\n## Weather_Condition_Light.Rain.Shower             0.1432256  0.2285365   0.627\n## Weather_Condition_Light.Rain.with.Thunder      -0.0073404  0.1401625  -0.052\n## Weather_Condition_Light.Snow                    0.0668484  0.1382771   0.483\n## Weather_Condition_Light.Snow...Windy            0.0484749  0.1476732   0.328\n## Weather_Condition_Light.Snow.and.Sleet         -0.0109237  0.3890494  -0.028\n## Weather_Condition_Light.Snow.Shower            -0.0225435  0.3892686  -0.058\n## Weather_Condition_Light.Thunderstorms.and.Rain  0.6127244  0.3892606   1.574\n## Weather_Condition_Mist                          0.1233196  0.1731992   0.712\n## Weather_Condition_Mostly.Cloudy                 0.0058899  0.1377034   0.043\n## Weather_Condition_Mostly.Cloudy...Windy         0.0218726  0.1399015   0.156\n## Weather_Condition_N.A.Precipitation            -0.0913070  0.1545100  -0.591\n## Weather_Condition_Overcast                      0.4983898  0.1431143   3.482\n## Weather_Condition_Partly.Cloudy                 0.0158153  0.1377180   0.115\n## Weather_Condition_Partly.Cloudy...Windy        -0.0037962  0.1423538  -0.027\n## Weather_Condition_Patches.of.Fog               -0.0027372  0.1534136  -0.018\n## Weather_Condition_Rain                          0.0142572  0.1385239   0.103\n## Weather_Condition_Rain...Windy                  0.0358286  0.1623339   0.221\n## Weather_Condition_Scattered.Clouds             -0.1571482  0.2512462  -0.625\n## Weather_Condition_Shallow.Fog                  -0.0550136  0.1512079  -0.364\n## Weather_Condition_Showers.in.the.Vicinity      -0.0797286  0.2512444  -0.317\n## Weather_Condition_Sleet                        -0.2149288  0.2918647  -0.736\n## Weather_Condition_Smoke                         0.1307071  0.1395502   0.937\n## Weather_Condition_Smoke...Windy                 0.9997957  0.2917851   3.426\n## Weather_Condition_Snow                          0.0810832  0.1427000   0.568\n## Weather_Condition_Snow...Windy                 -0.0018894  0.1947696  -0.010\n## Weather_Condition_Snow.and.Sleet               -0.1189619  0.3890803  -0.306\n## Weather_Condition_T.Storm                       0.0249463  0.1397750   0.178\n## Weather_Condition_T.Storm...Windy              -0.0160320  0.2511966  -0.064\n## Weather_Condition_Thunder                       0.0108711  0.1396562   0.078\n## Weather_Condition_Thunder...Windy              -0.0253296  0.1761665  -0.144\n## Weather_Condition_Thunder...Wintry.Mix         -0.2531879  0.3897783  -0.650\n## Weather_Condition_Thunder.and.Hail              0.0035043  0.3890103   0.009\n## Weather_Condition_Thunder.in.the.Vicinity       0.0334562  0.1390793   0.241\n## Weather_Condition_Widespread.Dust               0.0045709  0.3890005   0.012\n## Weather_Condition_Widespread.Dust...Windy       0.0209412  0.3890040   0.054\n## Weather_Condition_Wintry.Mix                    0.0400567  0.1421607   0.282\n## Weather_Condition_Wintry.Mix...Windy           -0.0084905  0.3890825  -0.022\n## Sunrise_Sunset_Night                            0.0116030  0.0031980   3.628\n##                                                Pr(&gt;|t|)    \n## (Intercept)                                     &lt; 2e-16 ***\n## Temperature.F.                                 0.385444    \n## Humidity...                                    0.000258 ***\n## Visibility.mi.                                 0.417425    \n## Wind_Speed.mph.                                0.592363    \n## Precipitation.in.                              0.917449    \n## CrossingTRUE                                    &lt; 2e-16 ***\n## JunctionTRUE                                   0.351310    \n## Traffic_SignalTRUE                             0.000709 ***\n## State_AR                                       4.52e-07 ***\n## State_AZ                                        &lt; 2e-16 ***\n## State_CA                                       1.85e-08 ***\n## State_CO                                        &lt; 2e-16 ***\n## State_CT                                        &lt; 2e-16 ***\n## State_DC                                       1.37e-07 ***\n## State_DE                                        &lt; 2e-16 ***\n## State_FL                                       1.86e-07 ***\n## State_GA                                        &lt; 2e-16 ***\n## State_IA                                        &lt; 2e-16 ***\n## State_ID                                       0.849215    \n## State_IL                                        &lt; 2e-16 ***\n## State_IN                                        &lt; 2e-16 ***\n## State_KS                                       0.121229    \n## State_KY                                       0.560884    \n## State_LA                                       2.86e-09 ***\n## State_MA                                        &lt; 2e-16 ***\n## State_MD                                        &lt; 2e-16 ***\n## State_ME                                       0.082056 .  \n## State_MI                                       0.000130 ***\n## State_MN                                       1.88e-07 ***\n## State_MO                                       0.833447    \n## State_MS                                       0.004631 ** \n## State_MT                                       5.45e-05 ***\n## State_NC                                       0.362505    \n## State_ND                                       0.051277 .  \n## State_NE                                       1.09e-07 ***\n## State_NH                                       5.13e-13 ***\n## State_NJ                                        &lt; 2e-16 ***\n## State_NM                                       0.250922    \n## State_NV                                       0.000130 ***\n## State_NY                                       6.93e-15 ***\n## State_OH                                       0.212717    \n## State_OK                                       0.767584    \n## State_OR                                       0.006472 ** \n## State_PA                                       0.544256    \n## State_RI                                       0.372335    \n## State_SC                                       2.32e-07 ***\n## State_SD                                       0.480689    \n## State_TN                                       1.90e-05 ***\n## State_TX                                       1.13e-06 ***\n## State_UT                                       0.009694 ** \n## State_VA                                       0.000336 ***\n## State_VT                                       0.043788 *  \n## State_WA                                        &lt; 2e-16 ***\n## State_WI                                        &lt; 2e-16 ***\n## State_WV                                       0.124501    \n## Weather_Condition_Blowing.Dust...Windy         0.937872    \n## Weather_Condition_Blowing.Snow...Windy         0.653594    \n## Weather_Condition_Clear                        0.179674    \n## Weather_Condition_Cloudy                       0.915320    \n## Weather_Condition_Cloudy...Windy               0.838490    \n## Weather_Condition_Drizzle                      0.364753    \n## Weather_Condition_Drizzle.and.Fog              0.765255    \n## Weather_Condition_Fair                         0.886498    \n## Weather_Condition_Fair...Windy                 0.710145    \n## Weather_Condition_Fog                          0.957560    \n## Weather_Condition_Fog...Windy                  0.974386    \n## Weather_Condition_Freezing.Drizzle             0.637971    \n## Weather_Condition_Haze                         0.939993    \n## Weather_Condition_Haze...Windy                 0.717998    \n## Weather_Condition_Heavy.Drizzle                0.820197    \n## Weather_Condition_Heavy.Rain                   0.955739    \n## Weather_Condition_Heavy.Rain...Windy           0.274711    \n## Weather_Condition_Heavy.Sleet                  0.938120    \n## Weather_Condition_Heavy.Snow                   0.803210    \n## Weather_Condition_Heavy.Snow...Windy           0.952268    \n## Weather_Condition_Heavy.T.Storm                0.956912    \n## Weather_Condition_Heavy.T.Storm...Windy        0.370373    \n## Weather_Condition_Light.Drizzle                0.778704    \n## Weather_Condition_Light.Drizzle...Windy        0.002030 ** \n## Weather_Condition_Light.Freezing.Drizzle       0.801342    \n## Weather_Condition_Light.Freezing.Rain          0.169277    \n## Weather_Condition_Light.Freezing.Rain...Windy  0.000135 ***\n## Weather_Condition_Light.Ice.Pellets            0.005312 ** \n## Weather_Condition_Light.Rain                   0.835198    \n## Weather_Condition_Light.Rain...Windy           0.687343    \n## Weather_Condition_Light.Rain.Shower            0.530853    \n## Weather_Condition_Light.Rain.with.Thunder      0.958234    \n## Weather_Condition_Light.Snow                   0.628786    \n## Weather_Condition_Light.Snow...Windy           0.742717    \n## Weather_Condition_Light.Snow.and.Sleet         0.977600    \n## Weather_Condition_Light.Snow.Shower            0.953819    \n## Weather_Condition_Light.Thunderstorms.and.Rain 0.115475    \n## Weather_Condition_Mist                         0.476461    \n## Weather_Condition_Mostly.Cloudy                0.965883    \n## Weather_Condition_Mostly.Cloudy...Windy        0.875763    \n## Weather_Condition_N.A.Precipitation            0.554559    \n## Weather_Condition_Overcast                     0.000497 ***\n## Weather_Condition_Partly.Cloudy                0.908574    \n## Weather_Condition_Partly.Cloudy...Windy        0.978725    \n## Weather_Condition_Patches.of.Fog               0.985765    \n## Weather_Condition_Rain                         0.918025    \n## Weather_Condition_Rain...Windy                 0.825319    \n## Weather_Condition_Scattered.Clouds             0.531661    \n## Weather_Condition_Shallow.Fog                  0.715988    \n## Weather_Condition_Showers.in.the.Vicinity      0.750990    \n## Weather_Condition_Sleet                        0.461490    \n## Weather_Condition_Smoke                        0.348951    \n## Weather_Condition_Smoke...Windy                0.000612 ***\n## Weather_Condition_Snow                         0.569896    \n## Weather_Condition_Snow...Windy                 0.992260    \n## Weather_Condition_Snow.and.Sleet               0.759795    \n## Weather_Condition_T.Storm                      0.858351    \n## Weather_Condition_T.Storm...Windy              0.949112    \n## Weather_Condition_Thunder                      0.937954    \n## Weather_Condition_Thunder...Windy              0.885673    \n## Weather_Condition_Thunder...Wintry.Mix         0.515973    \n## Weather_Condition_Thunder.and.Hail             0.992813    \n## Weather_Condition_Thunder.in.the.Vicinity      0.809901    \n## Weather_Condition_Widespread.Dust              0.990625    \n## Weather_Condition_Widespread.Dust...Windy      0.957068    \n## Weather_Condition_Wintry.Mix                   0.778120    \n## Weather_Condition_Wintry.Mix...Windy           0.982590    \n## Sunrise_Sunset_Night                           0.000286 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.3638 on 75797 degrees of freedom\n## Multiple R-squared:  0.108,  Adjusted R-squared:  0.1065 \n## F-statistic: 74.59 on 123 and 75797 DF,  p-value: &lt; 2.2e-16\n\nlibrary(coefplot)\nlibrary(broom)\n\n\n# Extract coefficients and standard errors\ncoef_df &lt;- tidy(lin_reg, conf.int = TRUE)\n\n# Filter out intercept\ncoef_df &lt;- coef_df[-1,]\n\nnum_coef_df &lt;- coef_df[coef_df$term %in% num_attribs,]\ncat_coef_df &lt;- coef_df[grep(\".*\\\\_.*\", coef_df$term), ]\n\n# Create plots\nplot_num &lt;- ggplot(num_coef_df, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Numeric Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_num\n\n\n\n\n\ncat_coef_df1 &lt;- cat_coef_df[1:25,]\ncat_coef_df2 &lt;- cat_coef_df[25:50,]\ncat_coef_df3 &lt;- cat_coef_df[50:75,]\ncat_coef_df4 &lt;- cat_coef_df[75:100,]\ncat_coef_df5 &lt;- cat_coef_df[100:125,]\n\n\n\n# Create  separate plots\nplot_cat1 &lt;- ggplot(cat_coef_df1, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_cat1\n\n\n\n\nplot_cat2 &lt;- ggplot(cat_coef_df2, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_cat2\n\n\n\n\nplot_cat3 &lt;- ggplot(cat_coef_df3, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\nplot_cat3\n\n\n\n\nplot_cat4 &lt;- ggplot(cat_coef_df4, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_cat4\n\n\n\n\nplot_cat5 &lt;- ggplot(cat_coef_df5, aes(x = estimate, y = reorder(term, estimate))) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  labs(x = \"Coefficient Estimate\", y = \"Variable\") +\n  ggtitle(\"Linear Regression Results for Categorical Variables\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))+\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nplot_cat5"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html",
    "href": "DANL310_midterm-spring-2023-a.html",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(stargazer)\n\n\nI use theme_set(theme_ipsum() + theme(strip.background =element_rect(fill=\"lightgray\"))) in the setup R code chunk with the include = FALSE option"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#loading-r-packages",
    "href": "DANL310_midterm-spring-2023-a.html#loading-r-packages",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(stargazer)\n\n\nI use theme_set(theme_ipsum() + theme(strip.background =element_rect(fill=\"lightgray\"))) in the setup R code chunk with the include = FALSE option"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q1a",
    "href": "DANL310_midterm-spring-2023-a.html#q1a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q1a",
    "text": "Q1a\n\nReplicate the following ggplot.\n\nUse the color #0072B2 for dots.\n\n\n\n# Set the data and filter to include only observations from 2007 and exclude Oceania\nggplot(data = filter(gapminder, year == 2007,\n                     continent != 'Oceania'),\n\n       # Set the aesthetics (x-axis and y-axis) to life expectancy and reorder countries by life expectancy\n       aes(x = lifeExp,\n           y = fct_reorder(country, lifeExp))) +\n\n  # Add a layer of points to the plot, setting the color to blue and size to 1.75\n  geom_point(color = \"#0072B2\", size = 1.75) +\n\n  # Add a layer of text labels to the plot, setting the label to life expectancy, hjust to -.25, and size to 2\n  geom_text(aes(label = lifeExp), hjust = -.25,\n            size = 2) +\n\n  # Facet the plot by continent, with y-scales free\n  facet_wrap(.~continent, scales = \"free_y\") +\n\n  # Set the x-axis label to NULL (no name) and limit the x-axis to 35-90\n  scale_x_continuous(\n    name = NULL,\n    lim = c(35, 90)\n  ) +\n\n  # Set the y-axis label to NULL (no name)\n  scale_y_discrete(name = NULL) +\n\n  # Add a title to the plot\n  labs(title = 'Life expectancy in 2007') +\n\n  # Set the theme to minimal\n  theme_minimal() +\n\n  # Customize theme elements: set the y-axis text size, the plot title size and position, and the facet strip text size and font face\n  theme(\n    axis.text.y = element_text(size = rel(.75)),\n    plot.title = element_text(size = rel(1.5),\n                              hjust = 0.5,\n                              face = 'bold'),\n    strip.text = element_text(size = rel(1.25),\n                              face = 'bold')\n  )"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q1b",
    "href": "DANL310_midterm-spring-2023-a.html#q1b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q1b",
    "text": "Q1b\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q2a",
    "href": "DANL310_midterm-spring-2023-a.html#q2a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q2a",
    "text": "Q2a\n\nReplicate the following ggplot.\n\nThe following describes the type values:\n\nn_ot_us: Number of US tweets\nn_ot_wrld: Number of worldwide tweets\nn_rt_lk_us: Number of US retweets & likes\nn_rt_lk_wrld: Number of worldwide retweets & likes\n\nUse the colors, maroon and #428bca properly.\n\n\n\n# The following line filters the rows of the n_tweets_long data frame that have a value of \"n_ot_us\" or \"n_ot_wrld\" in the \"type\" column. \n# It then creates a new column called \"type\" that replaces \"n_ot_us\" with \"US\" and \"n_ot_wrld\" with \"Worldwide\".\nn_tweets_long1 &lt;- n_tweets_long %&gt;% \n  filter(type %in% c(\"n_ot_us\", \"n_ot_wrld\") ) %&gt;% \n  mutate(type = ifelse(type == \"n_ot_us\", \"US\", \"Worldwide\"))\n\n\n# The following line filters the rows of the n_tweets_long data frame that have a value of \"n_rt_lk_us\" or \"n_rt_lk_wrld\" in the \"type\" column. \n# It then creates a new column called \"type\" that replaces \"n_rt_lk_us\" with \"US\" and \"n_rt_lk_wrld\" with \"Worldwide\".\nn_tweets_long2 &lt;- n_tweets_long %&gt;% \n  filter(type %in% c(\"n_rt_lk_us\", \"n_rt_lk_wrld\") ) %&gt;% \n  mutate(type = ifelse(type == \"n_rt_lk_us\", \"US\", \"Worldwide\"))\n  \n\n\np2 &lt;- ggplot(mapping = aes(x = year, y = n)) +  # Create a ggplot object with the mapping of the x-axis to the \"year\" variable and y-axis to the \"n\" variable\n  geom_col(n_tweets_long1,  # Add a column chart layer with the \"n_tweets_long1\" data\n           mapping = aes(fill = type),  # Map the \"type\" variable to the fill aesthetic of the chart\n           position = 'dodge', alpha = .67) +  # Set the position of the columns to \"dodge\" and the transparency to 0.67\n  geom_line(n_tweets_long2,  # Add a line chart layer with the \"n_tweets_long2\" data\n            mapping = aes(color = type),  # Map the \"type\" variable to the color aesthetic of the chart\n            size = 1.5) +  # Set the line size to 1.5\n  geom_point(data = n_tweets_long2,  # Add a point chart layer with the \"n_tweets_long2\" data\n             size = 2,  # Set the point size to 2\n             color = 'black')  +  # Set the point color to black\n  scale_x_continuous(breaks = seq(2012, 2017, 1)) +  # Set the x-axis breaks to the sequence from 2012 to 2017 with an interval of 1\n  scale_y_continuous(label = scales::comma) +  # Format the y-axis labels using the comma function from the scales package\n  scale_color_manual(values = c('maroon', '#428bca')) +  # Manually set the color values for the color aesthetic\n  scale_fill_manual(values = c('maroon', '#428bca')) +   # Manually set the color values for the fill aesthetic\n  guides(fill = guide_legend(reverse = TRUE,  # Customize the fill legend guide by reversing the order of the legend, positioning the labels at the bottom, and setting the number of rows to 2 and the key width to 2\n                             # title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 2,\n                             nrow = 2,\n                             order = 1),\n         color = guide_legend(reverse = TRUE,  # Customize the color legend guide by reversing the order of the legend, positioning the labels at the bottom, and setting the number of rows to 2 and the key width to 2\n                             # title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 2,\n                             nrow = 2,\n                             order = 2)) +\n  labs(x = \"Year\",  # Add x-axis label \"Year\"\n       y = \"Number of Tweets, Retweets & Likes\\n (in thousand)\",  # Add y-axis label \"Number of Tweets, Retweets & Likes (in thousand)\"\n       fill = \"Tweets\",  # Add fill legend label \"Tweets\"\n       color = \"Retweets and likes\",  # Add color legend label \"Retweets and likes\"\n       caption = 'Source: Choe, \"Social Media Campaigns, Lobbying, and Climate Change Legislation:\\n Evidence from #climatechange/#globalwarming and Energy Lobbies\" (2023)') +  # Add caption with source information\n  theme_ipsum() +  # Use the 'theme_ipsum' theme from the 'ggthemes' package\n  theme(\n  axis.title.y = element_text(\n    size = rel(1.5),\n    margin = margin(t = 0, r = 20, b = 0, l = 0) # set the margin for the y axis title\n  ),\n  axis.title.x = element_text(\n    size = rel(1.5),\n    margin = margin(t = 10, r = 0, b = 0, l = 0) # set the margin for the x axis title\n  ),\n  axis.text.x = element_text(\n    size = rel(1.25) # set the font size for the x axis tick labels\n  ),\n  axis.text.y = element_text(\n    size = rel(1.25) # set the font size for the y axis tick labels\n  ),\n  legend.position = 'top', # set the position of the legend\n  legend.title = element_text(\n    size = rel(1),\n    face = 'bold',\n    hjust = .5 # set the font size, face and horizontal justification for the legend title\n  ),\n  legend.text = element_text(\n    size = rel(1) # set the font size for the legend text\n  ),\n  legend.spacing.x = unit(1.25, \"cm\"), # set the horizontal spacing between legend items\n  plot.caption = element_text(\n    size = rel(1.25),\n    hjust = .5 # set the font size and horizontal justification for the plot caption\n  )\n)\n\n\np2"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q2b.",
    "href": "DANL310_midterm-spring-2023-a.html#q2b.",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q2b.",
    "text": "Q2b.\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q3a",
    "href": "DANL310_midterm-spring-2023-a.html#q3a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q3a",
    "text": "Q3a\n\nReplicate the following ggplot.\n\nYou should calculate the proportion of Pit Bull (or Mix) for each zip code.\nYou should join data.frames properly.\nChoose the color palette from the viridis scales https://ggplot2.tidyverse.org/reference/scale_viridis.html.\nUse coord_map(projection = \"albers\", lat0 = 39, lat1 = 45).\n\n\n\n# Joining two data frames using a common variable\nnyc_zips_df &lt;- nyc_zips_df %&gt;% \n  left_join(nyc_zips_coord)\n\n# Creating a data frame of the top 5 dog breeds by count\nnyc_dogs &lt;- nyc_dog_license %&gt;%\n  group_by(breed_rc) %&gt;% \n  summarise(N = n()) %&gt;% \n  filter(dense_rank(-N)&lt;=5)\n\n# Creating a data frame of dog breed frequency and percentage by zip code for the top 5 breeds\nnyc_fb &lt;- nyc_dog_license %&gt;%\n  group_by(zip_code, breed_rc) %&gt;%\n  summarize(n = n()) %&gt;%\n  mutate(freq = n / sum(n),\n         pct = round(freq*100, 2)) %&gt;%\n  filter(breed_rc %in% nyc_dogs$breed_rc )\n\n\n# theme_nymap &lt;- function(base_size=9, base_family=\"\") {\n#   require(grid)\n#   theme_bw(base_size=base_size, base_family=base_family) %+replace%\n#     theme(axis.line=element_blank(),\n#           axis.text=element_blank(),\n#           axis.ticks=element_blank(),\n#           axis.title=element_blank(),\n#           panel.background=element_blank(),\n#           panel.border=element_blank(),\n#           panel.grid=element_blank(),\n#           panel.spacing=unit(0, \"lines\"),\n#           plot.background=element_blank(),\n#     )\n# }\n\n\n# Create a map of New York City zip codes colored by the share of Pit Bull dogs \n# and their mixes out of all licensed dogs, based on licensing data\nfb_map &lt;- nyc_zips_df %&gt;% \n  left_join(nyc_fb)\n\n# Filter for Pit Bull breeds and plot the map\nfilter(fb_map, breed_rc %in% c('Pit Bull (or Mix)')) %&gt;% \n  ggplot(mapping = aes(x = X, y = Y, \n                       fill = pct,\n                       group = zip_code)) +\n  geom_polygon(color = \"gray80\", \n               size = 0.1) +    # draw the zip code polygons\n  scale_fill_viridis_c(option = \"inferno\",\n                       breaks = seq(0,24,2)) +  # set the color scale for Pit Bull share\n  labs(fill = \"Pit Bull's Share of All Licensed Dogs (%)\",\n       title = \"New York City's Pit Bull\",\n       subtitle = \"By Zip Code. Based on Licensing Data\") +  # set the map title and legend title\n  theme_map() +  # set the map theme\n  theme(legend.justification = c(.5,.5),\n        legend.position = 'top',\n        legend.direction = \"horizontal\",\n        legend.text = element_text(size= rel(1.25)),\n        legend.title = element_text(size= rel(1.25),\n                                face = 'bold',\n                                hjust = .5),\n        plot.title = element_text(hjust = .5,\n                                  vjust = .5,\n                                  face = 'bold',\n                                  size = rel(2.25)),\n        plot.subtitle = element_text(hjust = .5,\n                                     vjust = .5,\n                                     size = rel(1.25))) +  # customize the theme of the plot\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +  # set the map projection\n  guides(fill = guide_legend(title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 1, nrow = 1))  # set the legend position"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q3b",
    "href": "DANL310_midterm-spring-2023-a.html#q3b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q3b",
    "text": "Q3b\n\nWhich zip_code does have the highest proportion of Pit Bull (or Mix)?\n\n\nq3b &lt;- fb_map %&gt;% \n  select(zip_code, breed_rc, pct) %&gt;% \n  filter(breed_rc == 'Pit Bull (or Mix)') %&gt;% \n  arrange(-pct) %&gt;% \n  distinct()"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q4a",
    "href": "DANL310_midterm-spring-2023-a.html#q4a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following ggplot.\n\n\n# Create a new variable year extracted from the Date column\nstock &lt;- stock %&gt;% \n  mutate(year = year(Date))\n\np &lt;- ggplot(data = filter(stock, year &gt;= 2019, year &lt;= 2022 ) , \n            aes(x = log(Volume), y = log(Close), color = company))\n\np + \n  geom_point(alpha = .05) +\n  geom_smooth(method = lm, color = 'black') +\n  facet_grid( company ~ year, scales = 'free' ) +\n  labs(x = 'Volume (in log)',\n       y = 'Close (in log)') +\n  guides(color = \"none\")"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q4b",
    "href": "DANL310_midterm-spring-2023-a.html#q4b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q4b",
    "text": "Q4b\n\nIn 2020, which company’s stock trading Volume does seem to be the most insensitive to a change in Close price?\n\n\n# Create a new variable year extracted from the Date column\nstock &lt;- stock %&gt;% \n  mutate(year = year(Date))\n\np &lt;- ggplot(data = filter(stock, year &gt;= 2019, year &lt;= 2022 ) , \n            aes(x = log(Volume), y = log(Close), color = company))\n\np + \n  geom_point(alpha = .05) +\n  geom_smooth(method = lm, color = 'black') +\n  facet_grid( company ~ year ) +\n  labs(x = 'Volume (in log)',\n       y = 'Close (in log)') +\n  guides(color = \"none\")\n\n\n\n\n\nIn 2020, TSLA’s trading Volume seems to be the most insensitive to a change in Close price.\nThe reason is that for a one unit increase in log(Price), the least amount of log(Volume) changes for TSLA.\n\n\nreg &lt;- lm(log(Volume) ~ log(Close) * company,\n          data = filter(stock, year == 2020))\nreg_sum &lt;- tidy(reg, conf.int = T) %&gt;% \n  filter(str_detect(term, \"log\"), term != \"log(Close)\")\n\nggplot(reg_sum,\n       aes(x = estimate, y = term,\n           xmin = conf.low, \n           xmax = conf.high)) +\n  geom_point() +\n  geom_pointrange() +\n  geom_vline(xintercept = 0, color = 'red', lty = 2)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jason Rappazzo",
    "section": "",
    "text": "I am a student at State University of New York at Geneseo.\nI am interested in …\nI enjoy …"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jason Rappazzo",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo, 2023 - B.A.in Economics - Minor in Data Analytics"
  },
  {
    "objectID": "table.html",
    "href": "table.html",
    "title": "Untitled",
    "section": "",
    "text": "kable(\n  iris,\n  col.names = c('We', 'Need', 'Five', 'Names', 'Here')\n) \n\n\n\n\nWe\nNeed\nFive\nNames\nHere\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n4.6\n3.4\n1.4\n0.3\nsetosa\n\n\n5.0\n3.4\n1.5\n0.2\nsetosa\n\n\n4.4\n2.9\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.1\nsetosa\n\n\n5.4\n3.7\n1.5\n0.2\nsetosa\n\n\n4.8\n3.4\n1.6\n0.2\nsetosa\n\n\n4.8\n3.0\n1.4\n0.1\nsetosa\n\n\n4.3\n3.0\n1.1\n0.1\nsetosa\n\n\n5.8\n4.0\n1.2\n0.2\nsetosa\n\n\n5.7\n4.4\n1.5\n0.4\nsetosa\n\n\n5.4\n3.9\n1.3\n0.4\nsetosa\n\n\n5.1\n3.5\n1.4\n0.3\nsetosa\n\n\n5.7\n3.8\n1.7\n0.3\nsetosa\n\n\n5.1\n3.8\n1.5\n0.3\nsetosa\n\n\n5.4\n3.4\n1.7\n0.2\nsetosa\n\n\n5.1\n3.7\n1.5\n0.4\nsetosa\n\n\n4.6\n3.6\n1.0\n0.2\nsetosa\n\n\n5.1\n3.3\n1.7\n0.5\nsetosa\n\n\n4.8\n3.4\n1.9\n0.2\nsetosa\n\n\n5.0\n3.0\n1.6\n0.2\nsetosa\n\n\n5.0\n3.4\n1.6\n0.4\nsetosa\n\n\n5.2\n3.5\n1.5\n0.2\nsetosa\n\n\n5.2\n3.4\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.6\n0.2\nsetosa\n\n\n4.8\n3.1\n1.6\n0.2\nsetosa\n\n\n5.4\n3.4\n1.5\n0.4\nsetosa\n\n\n5.2\n4.1\n1.5\n0.1\nsetosa\n\n\n5.5\n4.2\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.2\n1.2\n0.2\nsetosa\n\n\n5.5\n3.5\n1.3\n0.2\nsetosa\n\n\n4.9\n3.6\n1.4\n0.1\nsetosa\n\n\n4.4\n3.0\n1.3\n0.2\nsetosa\n\n\n5.1\n3.4\n1.5\n0.2\nsetosa\n\n\n5.0\n3.5\n1.3\n0.3\nsetosa\n\n\n4.5\n2.3\n1.3\n0.3\nsetosa\n\n\n4.4\n3.2\n1.3\n0.2\nsetosa\n\n\n5.0\n3.5\n1.6\n0.6\nsetosa\n\n\n5.1\n3.8\n1.9\n0.4\nsetosa\n\n\n4.8\n3.0\n1.4\n0.3\nsetosa\n\n\n5.1\n3.8\n1.6\n0.2\nsetosa\n\n\n4.6\n3.2\n1.4\n0.2\nsetosa\n\n\n5.3\n3.7\n1.5\n0.2\nsetosa\n\n\n5.0\n3.3\n1.4\n0.2\nsetosa\n\n\n7.0\n3.2\n4.7\n1.4\nversicolor\n\n\n6.4\n3.2\n4.5\n1.5\nversicolor\n\n\n6.9\n3.1\n4.9\n1.5\nversicolor\n\n\n5.5\n2.3\n4.0\n1.3\nversicolor\n\n\n6.5\n2.8\n4.6\n1.5\nversicolor\n\n\n5.7\n2.8\n4.5\n1.3\nversicolor\n\n\n6.3\n3.3\n4.7\n1.6\nversicolor\n\n\n4.9\n2.4\n3.3\n1.0\nversicolor\n\n\n6.6\n2.9\n4.6\n1.3\nversicolor\n\n\n5.2\n2.7\n3.9\n1.4\nversicolor\n\n\n5.0\n2.0\n3.5\n1.0\nversicolor\n\n\n5.9\n3.0\n4.2\n1.5\nversicolor\n\n\n6.0\n2.2\n4.0\n1.0\nversicolor\n\n\n6.1\n2.9\n4.7\n1.4\nversicolor\n\n\n5.6\n2.9\n3.6\n1.3\nversicolor\n\n\n6.7\n3.1\n4.4\n1.4\nversicolor\n\n\n5.6\n3.0\n4.5\n1.5\nversicolor\n\n\n5.8\n2.7\n4.1\n1.0\nversicolor\n\n\n6.2\n2.2\n4.5\n1.5\nversicolor\n\n\n5.6\n2.5\n3.9\n1.1\nversicolor\n\n\n5.9\n3.2\n4.8\n1.8\nversicolor\n\n\n6.1\n2.8\n4.0\n1.3\nversicolor\n\n\n6.3\n2.5\n4.9\n1.5\nversicolor\n\n\n6.1\n2.8\n4.7\n1.2\nversicolor\n\n\n6.4\n2.9\n4.3\n1.3\nversicolor\n\n\n6.6\n3.0\n4.4\n1.4\nversicolor\n\n\n6.8\n2.8\n4.8\n1.4\nversicolor\n\n\n6.7\n3.0\n5.0\n1.7\nversicolor\n\n\n6.0\n2.9\n4.5\n1.5\nversicolor\n\n\n5.7\n2.6\n3.5\n1.0\nversicolor\n\n\n5.5\n2.4\n3.8\n1.1\nversicolor\n\n\n5.5\n2.4\n3.7\n1.0\nversicolor\n\n\n5.8\n2.7\n3.9\n1.2\nversicolor\n\n\n6.0\n2.7\n5.1\n1.6\nversicolor\n\n\n5.4\n3.0\n4.5\n1.5\nversicolor\n\n\n6.0\n3.4\n4.5\n1.6\nversicolor\n\n\n6.7\n3.1\n4.7\n1.5\nversicolor\n\n\n6.3\n2.3\n4.4\n1.3\nversicolor\n\n\n5.6\n3.0\n4.1\n1.3\nversicolor\n\n\n5.5\n2.5\n4.0\n1.3\nversicolor\n\n\n5.5\n2.6\n4.4\n1.2\nversicolor\n\n\n6.1\n3.0\n4.6\n1.4\nversicolor\n\n\n5.8\n2.6\n4.0\n1.2\nversicolor\n\n\n5.0\n2.3\n3.3\n1.0\nversicolor\n\n\n5.6\n2.7\n4.2\n1.3\nversicolor\n\n\n5.7\n3.0\n4.2\n1.2\nversicolor\n\n\n5.7\n2.9\n4.2\n1.3\nversicolor\n\n\n6.2\n2.9\n4.3\n1.3\nversicolor\n\n\n5.1\n2.5\n3.0\n1.1\nversicolor\n\n\n5.7\n2.8\n4.1\n1.3\nversicolor\n\n\n6.3\n3.3\n6.0\n2.5\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n7.1\n3.0\n5.9\n2.1\nvirginica\n\n\n6.3\n2.9\n5.6\n1.8\nvirginica\n\n\n6.5\n3.0\n5.8\n2.2\nvirginica\n\n\n7.6\n3.0\n6.6\n2.1\nvirginica\n\n\n4.9\n2.5\n4.5\n1.7\nvirginica\n\n\n7.3\n2.9\n6.3\n1.8\nvirginica\n\n\n6.7\n2.5\n5.8\n1.8\nvirginica\n\n\n7.2\n3.6\n6.1\n2.5\nvirginica\n\n\n6.5\n3.2\n5.1\n2.0\nvirginica\n\n\n6.4\n2.7\n5.3\n1.9\nvirginica\n\n\n6.8\n3.0\n5.5\n2.1\nvirginica\n\n\n5.7\n2.5\n5.0\n2.0\nvirginica\n\n\n5.8\n2.8\n5.1\n2.4\nvirginica\n\n\n6.4\n3.2\n5.3\n2.3\nvirginica\n\n\n6.5\n3.0\n5.5\n1.8\nvirginica\n\n\n7.7\n3.8\n6.7\n2.2\nvirginica\n\n\n7.7\n2.6\n6.9\n2.3\nvirginica\n\n\n6.0\n2.2\n5.0\n1.5\nvirginica\n\n\n6.9\n3.2\n5.7\n2.3\nvirginica\n\n\n5.6\n2.8\n4.9\n2.0\nvirginica\n\n\n7.7\n2.8\n6.7\n2.0\nvirginica\n\n\n6.3\n2.7\n4.9\n1.8\nvirginica\n\n\n6.7\n3.3\n5.7\n2.1\nvirginica\n\n\n7.2\n3.2\n6.0\n1.8\nvirginica\n\n\n6.2\n2.8\n4.8\n1.8\nvirginica\n\n\n6.1\n3.0\n4.9\n1.8\nvirginica\n\n\n6.4\n2.8\n5.6\n2.1\nvirginica\n\n\n7.2\n3.0\n5.8\n1.6\nvirginica\n\n\n7.4\n2.8\n6.1\n1.9\nvirginica\n\n\n7.9\n3.8\n6.4\n2.0\nvirginica\n\n\n6.4\n2.8\n5.6\n2.2\nvirginica\n\n\n6.3\n2.8\n5.1\n1.5\nvirginica\n\n\n6.1\n2.6\n5.6\n1.4\nvirginica\n\n\n7.7\n3.0\n6.1\n2.3\nvirginica\n\n\n6.3\n3.4\n5.6\n2.4\nvirginica\n\n\n6.4\n3.1\n5.5\n1.8\nvirginica\n\n\n6.0\n3.0\n4.8\n1.8\nvirginica\n\n\n6.9\n3.1\n5.4\n2.1\nvirginica\n\n\n6.7\n3.1\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.1\n2.3\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n6.8\n3.2\n5.9\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.5\nvirginica\n\n\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n6.3\n2.5\n5.0\n1.9\nvirginica\n\n\n6.5\n3.0\n5.2\n2.0\nvirginica\n\n\n6.2\n3.4\n5.4\n2.3\nvirginica\n\n\n5.9\n3.0\n5.1\n1.8\nvirginica\n\n\n\n\n\n\n\n\nknitr::kable(iris, align = \"lccrr\")\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n4.6\n3.4\n1.4\n0.3\nsetosa\n\n\n5.0\n3.4\n1.5\n0.2\nsetosa\n\n\n4.4\n2.9\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.1\nsetosa\n\n\n5.4\n3.7\n1.5\n0.2\nsetosa\n\n\n4.8\n3.4\n1.6\n0.2\nsetosa\n\n\n4.8\n3.0\n1.4\n0.1\nsetosa\n\n\n4.3\n3.0\n1.1\n0.1\nsetosa\n\n\n5.8\n4.0\n1.2\n0.2\nsetosa\n\n\n5.7\n4.4\n1.5\n0.4\nsetosa\n\n\n5.4\n3.9\n1.3\n0.4\nsetosa\n\n\n5.1\n3.5\n1.4\n0.3\nsetosa\n\n\n5.7\n3.8\n1.7\n0.3\nsetosa\n\n\n5.1\n3.8\n1.5\n0.3\nsetosa\n\n\n5.4\n3.4\n1.7\n0.2\nsetosa\n\n\n5.1\n3.7\n1.5\n0.4\nsetosa\n\n\n4.6\n3.6\n1.0\n0.2\nsetosa\n\n\n5.1\n3.3\n1.7\n0.5\nsetosa\n\n\n4.8\n3.4\n1.9\n0.2\nsetosa\n\n\n5.0\n3.0\n1.6\n0.2\nsetosa\n\n\n5.0\n3.4\n1.6\n0.4\nsetosa\n\n\n5.2\n3.5\n1.5\n0.2\nsetosa\n\n\n5.2\n3.4\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.6\n0.2\nsetosa\n\n\n4.8\n3.1\n1.6\n0.2\nsetosa\n\n\n5.4\n3.4\n1.5\n0.4\nsetosa\n\n\n5.2\n4.1\n1.5\n0.1\nsetosa\n\n\n5.5\n4.2\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.2\n1.2\n0.2\nsetosa\n\n\n5.5\n3.5\n1.3\n0.2\nsetosa\n\n\n4.9\n3.6\n1.4\n0.1\nsetosa\n\n\n4.4\n3.0\n1.3\n0.2\nsetosa\n\n\n5.1\n3.4\n1.5\n0.2\nsetosa\n\n\n5.0\n3.5\n1.3\n0.3\nsetosa\n\n\n4.5\n2.3\n1.3\n0.3\nsetosa\n\n\n4.4\n3.2\n1.3\n0.2\nsetosa\n\n\n5.0\n3.5\n1.6\n0.6\nsetosa\n\n\n5.1\n3.8\n1.9\n0.4\nsetosa\n\n\n4.8\n3.0\n1.4\n0.3\nsetosa\n\n\n5.1\n3.8\n1.6\n0.2\nsetosa\n\n\n4.6\n3.2\n1.4\n0.2\nsetosa\n\n\n5.3\n3.7\n1.5\n0.2\nsetosa\n\n\n5.0\n3.3\n1.4\n0.2\nsetosa\n\n\n7.0\n3.2\n4.7\n1.4\nversicolor\n\n\n6.4\n3.2\n4.5\n1.5\nversicolor\n\n\n6.9\n3.1\n4.9\n1.5\nversicolor\n\n\n5.5\n2.3\n4.0\n1.3\nversicolor\n\n\n6.5\n2.8\n4.6\n1.5\nversicolor\n\n\n5.7\n2.8\n4.5\n1.3\nversicolor\n\n\n6.3\n3.3\n4.7\n1.6\nversicolor\n\n\n4.9\n2.4\n3.3\n1.0\nversicolor\n\n\n6.6\n2.9\n4.6\n1.3\nversicolor\n\n\n5.2\n2.7\n3.9\n1.4\nversicolor\n\n\n5.0\n2.0\n3.5\n1.0\nversicolor\n\n\n5.9\n3.0\n4.2\n1.5\nversicolor\n\n\n6.0\n2.2\n4.0\n1.0\nversicolor\n\n\n6.1\n2.9\n4.7\n1.4\nversicolor\n\n\n5.6\n2.9\n3.6\n1.3\nversicolor\n\n\n6.7\n3.1\n4.4\n1.4\nversicolor\n\n\n5.6\n3.0\n4.5\n1.5\nversicolor\n\n\n5.8\n2.7\n4.1\n1.0\nversicolor\n\n\n6.2\n2.2\n4.5\n1.5\nversicolor\n\n\n5.6\n2.5\n3.9\n1.1\nversicolor\n\n\n5.9\n3.2\n4.8\n1.8\nversicolor\n\n\n6.1\n2.8\n4.0\n1.3\nversicolor\n\n\n6.3\n2.5\n4.9\n1.5\nversicolor\n\n\n6.1\n2.8\n4.7\n1.2\nversicolor\n\n\n6.4\n2.9\n4.3\n1.3\nversicolor\n\n\n6.6\n3.0\n4.4\n1.4\nversicolor\n\n\n6.8\n2.8\n4.8\n1.4\nversicolor\n\n\n6.7\n3.0\n5.0\n1.7\nversicolor\n\n\n6.0\n2.9\n4.5\n1.5\nversicolor\n\n\n5.7\n2.6\n3.5\n1.0\nversicolor\n\n\n5.5\n2.4\n3.8\n1.1\nversicolor\n\n\n5.5\n2.4\n3.7\n1.0\nversicolor\n\n\n5.8\n2.7\n3.9\n1.2\nversicolor\n\n\n6.0\n2.7\n5.1\n1.6\nversicolor\n\n\n5.4\n3.0\n4.5\n1.5\nversicolor\n\n\n6.0\n3.4\n4.5\n1.6\nversicolor\n\n\n6.7\n3.1\n4.7\n1.5\nversicolor\n\n\n6.3\n2.3\n4.4\n1.3\nversicolor\n\n\n5.6\n3.0\n4.1\n1.3\nversicolor\n\n\n5.5\n2.5\n4.0\n1.3\nversicolor\n\n\n5.5\n2.6\n4.4\n1.2\nversicolor\n\n\n6.1\n3.0\n4.6\n1.4\nversicolor\n\n\n5.8\n2.6\n4.0\n1.2\nversicolor\n\n\n5.0\n2.3\n3.3\n1.0\nversicolor\n\n\n5.6\n2.7\n4.2\n1.3\nversicolor\n\n\n5.7\n3.0\n4.2\n1.2\nversicolor\n\n\n5.7\n2.9\n4.2\n1.3\nversicolor\n\n\n6.2\n2.9\n4.3\n1.3\nversicolor\n\n\n5.1\n2.5\n3.0\n1.1\nversicolor\n\n\n5.7\n2.8\n4.1\n1.3\nversicolor\n\n\n6.3\n3.3\n6.0\n2.5\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n7.1\n3.0\n5.9\n2.1\nvirginica\n\n\n6.3\n2.9\n5.6\n1.8\nvirginica\n\n\n6.5\n3.0\n5.8\n2.2\nvirginica\n\n\n7.6\n3.0\n6.6\n2.1\nvirginica\n\n\n4.9\n2.5\n4.5\n1.7\nvirginica\n\n\n7.3\n2.9\n6.3\n1.8\nvirginica\n\n\n6.7\n2.5\n5.8\n1.8\nvirginica\n\n\n7.2\n3.6\n6.1\n2.5\nvirginica\n\n\n6.5\n3.2\n5.1\n2.0\nvirginica\n\n\n6.4\n2.7\n5.3\n1.9\nvirginica\n\n\n6.8\n3.0\n5.5\n2.1\nvirginica\n\n\n5.7\n2.5\n5.0\n2.0\nvirginica\n\n\n5.8\n2.8\n5.1\n2.4\nvirginica\n\n\n6.4\n3.2\n5.3\n2.3\nvirginica\n\n\n6.5\n3.0\n5.5\n1.8\nvirginica\n\n\n7.7\n3.8\n6.7\n2.2\nvirginica\n\n\n7.7\n2.6\n6.9\n2.3\nvirginica\n\n\n6.0\n2.2\n5.0\n1.5\nvirginica\n\n\n6.9\n3.2\n5.7\n2.3\nvirginica\n\n\n5.6\n2.8\n4.9\n2.0\nvirginica\n\n\n7.7\n2.8\n6.7\n2.0\nvirginica\n\n\n6.3\n2.7\n4.9\n1.8\nvirginica\n\n\n6.7\n3.3\n5.7\n2.1\nvirginica\n\n\n7.2\n3.2\n6.0\n1.8\nvirginica\n\n\n6.2\n2.8\n4.8\n1.8\nvirginica\n\n\n6.1\n3.0\n4.9\n1.8\nvirginica\n\n\n6.4\n2.8\n5.6\n2.1\nvirginica\n\n\n7.2\n3.0\n5.8\n1.6\nvirginica\n\n\n7.4\n2.8\n6.1\n1.9\nvirginica\n\n\n7.9\n3.8\n6.4\n2.0\nvirginica\n\n\n6.4\n2.8\n5.6\n2.2\nvirginica\n\n\n6.3\n2.8\n5.1\n1.5\nvirginica\n\n\n6.1\n2.6\n5.6\n1.4\nvirginica\n\n\n7.7\n3.0\n6.1\n2.3\nvirginica\n\n\n6.3\n3.4\n5.6\n2.4\nvirginica\n\n\n6.4\n3.1\n5.5\n1.8\nvirginica\n\n\n6.0\n3.0\n4.8\n1.8\nvirginica\n\n\n6.9\n3.1\n5.4\n2.1\nvirginica\n\n\n6.7\n3.1\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.1\n2.3\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n6.8\n3.2\n5.9\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.5\nvirginica\n\n\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n6.3\n2.5\n5.0\n1.9\nvirginica\n\n\n6.5\n3.0\n5.2\n2.0\nvirginica\n\n\n6.2\n3.4\n5.4\n2.3\nvirginica\n\n\n5.9\n3.0\n5.1\n1.8\nvirginica\n\n\n\n\n\n\n\n\nd &lt;- cbind(X1 = runif(3), X2 = 10^c(3, 5, 7), X3 = rnorm(3,\n  0, 1000))\n# at most 4 decimal places\nknitr::kable(d, digits = 4)\n\n\n\n\nX1\nX2\nX3\n\n\n\n\n0.8542\n1e+03\n518.8975\n\n\n0.4480\n1e+05\n1127.3137\n\n\n0.3164\n1e+07\n-122.9774\n\n\n\n\n\n\n\n\nknitr::kable(d, digits = 3, \n             format.args = list(scientific = FALSE))\n\n\n\n\nX1\nX2\nX3\n\n\n\n\n0.854\n1000\n518.897\n\n\n0.448\n100000\n1127.314\n\n\n0.316\n10000000\n-122.977"
  }
]